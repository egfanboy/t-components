// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Dialog rendering should match the default snapshot 1`] = `
<WithTheme(Dialog)
  cancelButton={
    Object {
      "onClick": [MockFunction],
    }
  }
  primaryButton={
    Object {
      "label": "action",
    }
  }
  renderBody={[Function]}
  show={true}
>
  <Dialog
    cancelButton={
      Object {
        "onClick": [MockFunction],
      }
    }
    primaryButton={
      Object {
        "label": "action",
      }
    }
    renderBody={[Function]}
    show={true}
    theme={
      Object {
        "error": String {
          "0": "#",
          "1": "d",
          "2": "3",
          "3": "2",
          "4": "f",
          "5": "2",
          "6": "f",
          "dark": "#9e0707",
          "light": "#e54242",
        },
        "grey": String {
          "0": "#",
          "1": "7",
          "2": "3",
          "3": "7",
          "4": "3",
          "5": "7",
          "6": "3",
          "dark": "#202020",
          "light": "#838383",
        },
        "primary": String {
          "0": "#",
          "1": "5",
          "2": "7",
          "3": "0",
          "4": "7",
          "5": "e",
          "6": "b",
          "dark": "#4a0072",
          "light": "#6217ed",
        },
        "success": String {
          "0": "#",
          "1": "3",
          "2": "0",
          "3": "a",
          "4": "6",
          "5": "4",
          "6": "a",
          "dark": " #178b30",
          "light": "#42b45b",
        },
        "warning": String {
          "0": "#",
          "1": "f",
          "2": "f",
          "3": "9",
          "4": "9",
          "5": "2",
          "6": "6",
          "dark": "#ff8800",
          "light": "#ffa726",
        },
      }
    }
  >
    <Portal
      containerInfo={
        <body>
          <div
            class="sc-jKJlTe hfznNG"
          />
          <div
            class="sc-eNQAEJ cIkDah"
          >
            <div
              aria-hidden="true"
              aria-modal="true"
              class="sc-hMqMXs hSZYPX"
              role="dialog"
              tabindex="-1"
            >
              <div
                class="sc-kEYyzF dLpblE"
              >
                <div>
                  <p
                    id="content"
                  >
                    I am the body
                  </p>
                </div>
              </div>
              <div
                class="sc-kkGfuU juxXhN"
              >
                <button
                  class="sc-gqjmRU bMmQyl"
                  type="primary"
                >
                  <div
                    class="sc-dnqmqq jEdkgN"
                  >
                    <label
                      class="sc-gZMcBi giNnHm"
                    >
                      Close
                    </label>
                  </div>
                </button>
                <button
                  class="sc-gqjmRU hdTOCm"
                  type="primary"
                >
                  <div
                    class="sc-dnqmqq jEdkgN"
                  >
                    <label
                      class="sc-gZMcBi giNnHm"
                    >
                      action
                    </label>
                  </div>
                </button>
              </div>
            </div>
          </div>
        </body>
      }
    >
      <styled.div>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-jKJlTe",
                "isStatic": false,
                "lastClassName": "hfznNG",
                "rules": Array [
                  "
    position: fixed;
    top: 0;
    left: 0;
    z-index: 100;
    width: 100vw;
    height: 100vh;
    background-color: #000;
    opacity: 0.5;
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-jKJlTe",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <div
            className="sc-jKJlTe hfznNG"
          />
        </StyledComponent>
      </styled.div>
      <styled.div>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-eNQAEJ",
                "isStatic": false,
                "lastClassName": "cIkDah",
                "rules": Array [
                  "
    position: fixed;
    top: 0;
    left: 0;
    z-index: 101;
    width: 100%;
    height: 100%;
    overflow-x: hidden;
    overflow-y: auto;
    outline: 0;
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-eNQAEJ",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <div
            className="sc-eNQAEJ cIkDah"
          >
            <styled.div
              aria-hidden={true}
              aria-modal={true}
              role="dialog"
              tabIndex={-1}
            >
              <StyledComponent
                aria-hidden={true}
                aria-modal={true}
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-hMqMXs",
                      "isStatic": false,
                      "lastClassName": "hSZYPX",
                      "rules": Array [
                        "
    z-index: 100;
    background: white;
    margin: 0;
    position: absolute;
    padding: 10px 20px;
    min-width: 300px;
    min-height: 150px;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    border-radius: 3px;
    display: flex;
    flex-direction: column;
",
                      ],
                    },
                    "displayName": "styled.div",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-hMqMXs",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                role="dialog"
                tabIndex={-1}
              >
                <div
                  aria-hidden={true}
                  aria-modal={true}
                  className="sc-hMqMXs hSZYPX"
                  role="dialog"
                  tabIndex={-1}
                >
                  <styled.div>
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-kEYyzF",
                            "isStatic": false,
                            "lastClassName": "dLpblE",
                            "rules": Array [
                              "
    max-height: 70vh;
    overflow: scroll;
    height: 100%;
    margin-bottom: 1rem;
",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-kEYyzF",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <div
                        className="sc-kEYyzF dLpblE"
                      >
                        <div>
                          <p
                            id="content"
                          >
                            I am the body
                          </p>
                        </div>
                      </div>
                    </StyledComponent>
                  </styled.div>
                  <styled.div>
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-kkGfuU",
                            "isStatic": false,
                            "lastClassName": "juxXhN",
                            "rules": Array [
                              "
    margin-top: auto;
    display: flex;
    justify-content: center;
",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-kkGfuU",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <div
                        className="sc-kkGfuU juxXhN"
                      >
                        <WithTheme(Button)
                          label="Close"
                          onClick={[Function]}
                          outline={true}
                        >
                          <Button
                            disabled={false}
                            label="Close"
                            onClick={[Function]}
                            outline={true}
                            size="large"
                            text={false}
                            theme={
                              Object {
                                "error": String {
                                  "0": "#",
                                  "1": "d",
                                  "2": "3",
                                  "3": "2",
                                  "4": "f",
                                  "5": "2",
                                  "6": "f",
                                  "dark": "#9e0707",
                                  "light": "#e54242",
                                },
                                "grey": String {
                                  "0": "#",
                                  "1": "7",
                                  "2": "3",
                                  "3": "7",
                                  "4": "3",
                                  "5": "7",
                                  "6": "3",
                                  "dark": "#202020",
                                  "light": "#838383",
                                },
                                "primary": String {
                                  "0": "#",
                                  "1": "5",
                                  "2": "7",
                                  "3": "0",
                                  "4": "7",
                                  "5": "e",
                                  "6": "b",
                                  "dark": "#4a0072",
                                  "light": "#6217ed",
                                },
                                "success": String {
                                  "0": "#",
                                  "1": "3",
                                  "2": "0",
                                  "3": "a",
                                  "4": "6",
                                  "5": "4",
                                  "6": "a",
                                  "dark": " #178b30",
                                  "light": "#42b45b",
                                },
                                "warning": String {
                                  "0": "#",
                                  "1": "f",
                                  "2": "f",
                                  "3": "9",
                                  "4": "9",
                                  "5": "2",
                                  "6": "6",
                                  "dark": "#ff8800",
                                  "light": "#ffa726",
                                },
                              }
                            }
                            type="primary"
                          >
                            <styled.button
                              disabled={false}
                              isLoading={false}
                              onClick={[Function]}
                              outline={true}
                              size="large"
                              text={false}
                              theme={
                                Object {
                                  "error": String {
                                    "0": "#",
                                    "1": "d",
                                    "2": "3",
                                    "3": "2",
                                    "4": "f",
                                    "5": "2",
                                    "6": "f",
                                    "dark": "#9e0707",
                                    "light": "#e54242",
                                  },
                                  "grey": String {
                                    "0": "#",
                                    "1": "7",
                                    "2": "3",
                                    "3": "7",
                                    "4": "3",
                                    "5": "7",
                                    "6": "3",
                                    "dark": "#202020",
                                    "light": "#838383",
                                  },
                                  "primary": String {
                                    "0": "#",
                                    "1": "5",
                                    "2": "7",
                                    "3": "0",
                                    "4": "7",
                                    "5": "e",
                                    "6": "b",
                                    "dark": "#4a0072",
                                    "light": "#6217ed",
                                  },
                                  "success": String {
                                    "0": "#",
                                    "1": "3",
                                    "2": "0",
                                    "3": "a",
                                    "4": "6",
                                    "5": "4",
                                    "6": "a",
                                    "dark": " #178b30",
                                    "light": "#42b45b",
                                  },
                                  "warning": String {
                                    "0": "#",
                                    "1": "f",
                                    "2": "f",
                                    "3": "9",
                                    "4": "9",
                                    "5": "2",
                                    "6": "6",
                                    "dark": "#ff8800",
                                    "light": "#ffa726",
                                  },
                                }
                              }
                              type="primary"
                            >
                              <StyledComponent
                                disabled={false}
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-gqjmRU",
                                      "isStatic": false,
                                      "lastClassName": "hdTOCm",
                                      "rules": Array [
                                        "
    border-radius: 4px;
    height: 40px;
    margin: 5px;
    width: ",
                                        [Function],
                                        ";
    max-width: 225px;
    text-transform: uppercase;
    font-size: 14px;

    letter-spacing: 0.12em;
    border-color: transparent;
    transition: all 0.2s;

    ",
                                        ".sc-gZMcBi",
                                        " {
        &:hover {
            cursor: ",
                                        [Function],
                                        ";
        }
    }

    ",
                                        [Function],
                                        ";
",
                                      ],
                                    },
                                    "displayName": "styled.button",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-gqjmRU",
                                    "target": "button",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                isLoading={false}
                                onClick={[Function]}
                                outline={true}
                                size="large"
                                text={false}
                                theme={
                                  Object {
                                    "error": String {
                                      "0": "#",
                                      "1": "d",
                                      "2": "3",
                                      "3": "2",
                                      "4": "f",
                                      "5": "2",
                                      "6": "f",
                                      "dark": "#9e0707",
                                      "light": "#e54242",
                                    },
                                    "grey": String {
                                      "0": "#",
                                      "1": "7",
                                      "2": "3",
                                      "3": "7",
                                      "4": "3",
                                      "5": "7",
                                      "6": "3",
                                      "dark": "#202020",
                                      "light": "#838383",
                                    },
                                    "primary": String {
                                      "0": "#",
                                      "1": "5",
                                      "2": "7",
                                      "3": "0",
                                      "4": "7",
                                      "5": "e",
                                      "6": "b",
                                      "dark": "#4a0072",
                                      "light": "#6217ed",
                                    },
                                    "success": String {
                                      "0": "#",
                                      "1": "3",
                                      "2": "0",
                                      "3": "a",
                                      "4": "6",
                                      "5": "4",
                                      "6": "a",
                                      "dark": " #178b30",
                                      "light": "#42b45b",
                                    },
                                    "warning": String {
                                      "0": "#",
                                      "1": "f",
                                      "2": "f",
                                      "3": "9",
                                      "4": "9",
                                      "5": "2",
                                      "6": "6",
                                      "dark": "#ff8800",
                                      "light": "#ffa726",
                                    },
                                  }
                                }
                                type="primary"
                              >
                                <button
                                  className="sc-gqjmRU bMmQyl"
                                  disabled={false}
                                  onClick={[Function]}
                                  size="large"
                                  type="primary"
                                >
                                  <styled.div>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-dnqmqq",
                                            "isStatic": false,
                                            "lastClassName": "jEdkgN",
                                            "rules": Array [
                                              "
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: transparent;

    user-select: none;
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-dnqmqq",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="sc-dnqmqq jEdkgN"
                                      >
                                        <styled.label>
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-gZMcBi",
                                                  "isStatic": false,
                                                  "lastClassName": "giNnHm",
                                                  "rules": Array [],
                                                },
                                                "displayName": "styled.label",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-gZMcBi",
                                                "target": "label",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <label
                                              className="sc-gZMcBi giNnHm"
                                            >
                                              Close
                                            </label>
                                          </StyledComponent>
                                        </styled.label>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                </button>
                              </StyledComponent>
                            </styled.button>
                          </Button>
                        </WithTheme(Button)>
                        <WithTheme(Button)
                          label="action"
                          onClick={[Function]}
                        >
                          <Button
                            disabled={false}
                            label="action"
                            onClick={[Function]}
                            outline={false}
                            size="large"
                            text={false}
                            theme={
                              Object {
                                "error": String {
                                  "0": "#",
                                  "1": "d",
                                  "2": "3",
                                  "3": "2",
                                  "4": "f",
                                  "5": "2",
                                  "6": "f",
                                  "dark": "#9e0707",
                                  "light": "#e54242",
                                },
                                "grey": String {
                                  "0": "#",
                                  "1": "7",
                                  "2": "3",
                                  "3": "7",
                                  "4": "3",
                                  "5": "7",
                                  "6": "3",
                                  "dark": "#202020",
                                  "light": "#838383",
                                },
                                "primary": String {
                                  "0": "#",
                                  "1": "5",
                                  "2": "7",
                                  "3": "0",
                                  "4": "7",
                                  "5": "e",
                                  "6": "b",
                                  "dark": "#4a0072",
                                  "light": "#6217ed",
                                },
                                "success": String {
                                  "0": "#",
                                  "1": "3",
                                  "2": "0",
                                  "3": "a",
                                  "4": "6",
                                  "5": "4",
                                  "6": "a",
                                  "dark": " #178b30",
                                  "light": "#42b45b",
                                },
                                "warning": String {
                                  "0": "#",
                                  "1": "f",
                                  "2": "f",
                                  "3": "9",
                                  "4": "9",
                                  "5": "2",
                                  "6": "6",
                                  "dark": "#ff8800",
                                  "light": "#ffa726",
                                },
                              }
                            }
                            type="primary"
                          >
                            <styled.button
                              disabled={false}
                              isLoading={false}
                              onClick={[Function]}
                              outline={false}
                              size="large"
                              text={false}
                              theme={
                                Object {
                                  "error": String {
                                    "0": "#",
                                    "1": "d",
                                    "2": "3",
                                    "3": "2",
                                    "4": "f",
                                    "5": "2",
                                    "6": "f",
                                    "dark": "#9e0707",
                                    "light": "#e54242",
                                  },
                                  "grey": String {
                                    "0": "#",
                                    "1": "7",
                                    "2": "3",
                                    "3": "7",
                                    "4": "3",
                                    "5": "7",
                                    "6": "3",
                                    "dark": "#202020",
                                    "light": "#838383",
                                  },
                                  "primary": String {
                                    "0": "#",
                                    "1": "5",
                                    "2": "7",
                                    "3": "0",
                                    "4": "7",
                                    "5": "e",
                                    "6": "b",
                                    "dark": "#4a0072",
                                    "light": "#6217ed",
                                  },
                                  "success": String {
                                    "0": "#",
                                    "1": "3",
                                    "2": "0",
                                    "3": "a",
                                    "4": "6",
                                    "5": "4",
                                    "6": "a",
                                    "dark": " #178b30",
                                    "light": "#42b45b",
                                  },
                                  "warning": String {
                                    "0": "#",
                                    "1": "f",
                                    "2": "f",
                                    "3": "9",
                                    "4": "9",
                                    "5": "2",
                                    "6": "6",
                                    "dark": "#ff8800",
                                    "light": "#ffa726",
                                  },
                                }
                              }
                              type="primary"
                            >
                              <StyledComponent
                                disabled={false}
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-gqjmRU",
                                      "isStatic": false,
                                      "lastClassName": "hdTOCm",
                                      "rules": Array [
                                        "
    border-radius: 4px;
    height: 40px;
    margin: 5px;
    width: ",
                                        [Function],
                                        ";
    max-width: 225px;
    text-transform: uppercase;
    font-size: 14px;

    letter-spacing: 0.12em;
    border-color: transparent;
    transition: all 0.2s;

    ",
                                        ".sc-gZMcBi",
                                        " {
        &:hover {
            cursor: ",
                                        [Function],
                                        ";
        }
    }

    ",
                                        [Function],
                                        ";
",
                                      ],
                                    },
                                    "displayName": "styled.button",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-gqjmRU",
                                    "target": "button",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                isLoading={false}
                                onClick={[Function]}
                                outline={false}
                                size="large"
                                text={false}
                                theme={
                                  Object {
                                    "error": String {
                                      "0": "#",
                                      "1": "d",
                                      "2": "3",
                                      "3": "2",
                                      "4": "f",
                                      "5": "2",
                                      "6": "f",
                                      "dark": "#9e0707",
                                      "light": "#e54242",
                                    },
                                    "grey": String {
                                      "0": "#",
                                      "1": "7",
                                      "2": "3",
                                      "3": "7",
                                      "4": "3",
                                      "5": "7",
                                      "6": "3",
                                      "dark": "#202020",
                                      "light": "#838383",
                                    },
                                    "primary": String {
                                      "0": "#",
                                      "1": "5",
                                      "2": "7",
                                      "3": "0",
                                      "4": "7",
                                      "5": "e",
                                      "6": "b",
                                      "dark": "#4a0072",
                                      "light": "#6217ed",
                                    },
                                    "success": String {
                                      "0": "#",
                                      "1": "3",
                                      "2": "0",
                                      "3": "a",
                                      "4": "6",
                                      "5": "4",
                                      "6": "a",
                                      "dark": " #178b30",
                                      "light": "#42b45b",
                                    },
                                    "warning": String {
                                      "0": "#",
                                      "1": "f",
                                      "2": "f",
                                      "3": "9",
                                      "4": "9",
                                      "5": "2",
                                      "6": "6",
                                      "dark": "#ff8800",
                                      "light": "#ffa726",
                                    },
                                  }
                                }
                                type="primary"
                              >
                                <button
                                  className="sc-gqjmRU hdTOCm"
                                  disabled={false}
                                  onClick={[Function]}
                                  size="large"
                                  type="primary"
                                >
                                  <styled.div>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-dnqmqq",
                                            "isStatic": false,
                                            "lastClassName": "jEdkgN",
                                            "rules": Array [
                                              "
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: transparent;

    user-select: none;
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-dnqmqq",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="sc-dnqmqq jEdkgN"
                                      >
                                        <styled.label>
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-gZMcBi",
                                                  "isStatic": false,
                                                  "lastClassName": "giNnHm",
                                                  "rules": Array [],
                                                },
                                                "displayName": "styled.label",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-gZMcBi",
                                                "target": "label",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <label
                                              className="sc-gZMcBi giNnHm"
                                            >
                                              action
                                            </label>
                                          </StyledComponent>
                                        </styled.label>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                </button>
                              </StyledComponent>
                            </styled.button>
                          </Button>
                        </WithTheme(Button)>
                      </div>
                    </StyledComponent>
                  </styled.div>
                </div>
              </StyledComponent>
            </styled.div>
          </div>
        </StyledComponent>
      </styled.div>
    </Portal>
  </Dialog>
</WithTheme(Dialog)>
`;

exports[`Dialog rendering should match the snapshot of a custom cancel label 1`] = `
<WithTheme(Dialog)
  cancelButton={
    Object {
      "label": "I am custom",
    }
  }
  primaryButton={
    Object {
      "label": "action",
    }
  }
  renderBody={[Function]}
  show={true}
>
  <Dialog
    cancelButton={
      Object {
        "label": "I am custom",
      }
    }
    primaryButton={
      Object {
        "label": "action",
      }
    }
    renderBody={[Function]}
    show={true}
    theme={
      Object {
        "error": String {
          "0": "#",
          "1": "d",
          "2": "3",
          "3": "2",
          "4": "f",
          "5": "2",
          "6": "f",
          "dark": "#9e0707",
          "light": "#e54242",
        },
        "grey": String {
          "0": "#",
          "1": "7",
          "2": "3",
          "3": "7",
          "4": "3",
          "5": "7",
          "6": "3",
          "dark": "#202020",
          "light": "#838383",
        },
        "primary": String {
          "0": "#",
          "1": "5",
          "2": "7",
          "3": "0",
          "4": "7",
          "5": "e",
          "6": "b",
          "dark": "#4a0072",
          "light": "#6217ed",
        },
        "success": String {
          "0": "#",
          "1": "3",
          "2": "0",
          "3": "a",
          "4": "6",
          "5": "4",
          "6": "a",
          "dark": " #178b30",
          "light": "#42b45b",
        },
        "warning": String {
          "0": "#",
          "1": "f",
          "2": "f",
          "3": "9",
          "4": "9",
          "5": "2",
          "6": "6",
          "dark": "#ff8800",
          "light": "#ffa726",
        },
      }
    }
  >
    <Portal
      containerInfo={
        <body>
          <div
            class="sc-jKJlTe hfznNG"
          />
          <div
            class="sc-eNQAEJ cIkDah"
          >
            <div
              aria-hidden="true"
              aria-modal="true"
              class="sc-hMqMXs hSZYPX"
              role="dialog"
              tabindex="-1"
            >
              <div
                class="sc-kEYyzF dLpblE"
              >
                <div>
                  <p
                    id="content"
                  >
                    I am the body
                  </p>
                </div>
              </div>
              <div
                class="sc-kkGfuU juxXhN"
              >
                <button
                  class="sc-gqjmRU bMmQyl"
                  type="primary"
                >
                  <div
                    class="sc-dnqmqq jEdkgN"
                  >
                    <label
                      class="sc-gZMcBi giNnHm"
                    >
                      I am custom
                    </label>
                  </div>
                </button>
                <button
                  class="sc-gqjmRU hdTOCm"
                  type="primary"
                >
                  <div
                    class="sc-dnqmqq jEdkgN"
                  >
                    <label
                      class="sc-gZMcBi giNnHm"
                    >
                      action
                    </label>
                  </div>
                </button>
              </div>
            </div>
          </div>
        </body>
      }
    >
      <styled.div>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-jKJlTe",
                "isStatic": false,
                "lastClassName": "hfznNG",
                "rules": Array [
                  "
    position: fixed;
    top: 0;
    left: 0;
    z-index: 100;
    width: 100vw;
    height: 100vh;
    background-color: #000;
    opacity: 0.5;
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-jKJlTe",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <div
            className="sc-jKJlTe hfznNG"
          />
        </StyledComponent>
      </styled.div>
      <styled.div>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-eNQAEJ",
                "isStatic": false,
                "lastClassName": "cIkDah",
                "rules": Array [
                  "
    position: fixed;
    top: 0;
    left: 0;
    z-index: 101;
    width: 100%;
    height: 100%;
    overflow-x: hidden;
    overflow-y: auto;
    outline: 0;
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-eNQAEJ",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <div
            className="sc-eNQAEJ cIkDah"
          >
            <styled.div
              aria-hidden={true}
              aria-modal={true}
              role="dialog"
              tabIndex={-1}
            >
              <StyledComponent
                aria-hidden={true}
                aria-modal={true}
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-hMqMXs",
                      "isStatic": false,
                      "lastClassName": "hSZYPX",
                      "rules": Array [
                        "
    z-index: 100;
    background: white;
    margin: 0;
    position: absolute;
    padding: 10px 20px;
    min-width: 300px;
    min-height: 150px;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    border-radius: 3px;
    display: flex;
    flex-direction: column;
",
                      ],
                    },
                    "displayName": "styled.div",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-hMqMXs",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                role="dialog"
                tabIndex={-1}
              >
                <div
                  aria-hidden={true}
                  aria-modal={true}
                  className="sc-hMqMXs hSZYPX"
                  role="dialog"
                  tabIndex={-1}
                >
                  <styled.div>
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-kEYyzF",
                            "isStatic": false,
                            "lastClassName": "dLpblE",
                            "rules": Array [
                              "
    max-height: 70vh;
    overflow: scroll;
    height: 100%;
    margin-bottom: 1rem;
",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-kEYyzF",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <div
                        className="sc-kEYyzF dLpblE"
                      >
                        <div>
                          <p
                            id="content"
                          >
                            I am the body
                          </p>
                        </div>
                      </div>
                    </StyledComponent>
                  </styled.div>
                  <styled.div>
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-kkGfuU",
                            "isStatic": false,
                            "lastClassName": "juxXhN",
                            "rules": Array [
                              "
    margin-top: auto;
    display: flex;
    justify-content: center;
",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-kkGfuU",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <div
                        className="sc-kkGfuU juxXhN"
                      >
                        <WithTheme(Button)
                          label="I am custom"
                          onClick={[Function]}
                          outline={true}
                        >
                          <Button
                            disabled={false}
                            label="I am custom"
                            onClick={[Function]}
                            outline={true}
                            size="large"
                            text={false}
                            theme={
                              Object {
                                "error": String {
                                  "0": "#",
                                  "1": "d",
                                  "2": "3",
                                  "3": "2",
                                  "4": "f",
                                  "5": "2",
                                  "6": "f",
                                  "dark": "#9e0707",
                                  "light": "#e54242",
                                },
                                "grey": String {
                                  "0": "#",
                                  "1": "7",
                                  "2": "3",
                                  "3": "7",
                                  "4": "3",
                                  "5": "7",
                                  "6": "3",
                                  "dark": "#202020",
                                  "light": "#838383",
                                },
                                "primary": String {
                                  "0": "#",
                                  "1": "5",
                                  "2": "7",
                                  "3": "0",
                                  "4": "7",
                                  "5": "e",
                                  "6": "b",
                                  "dark": "#4a0072",
                                  "light": "#6217ed",
                                },
                                "success": String {
                                  "0": "#",
                                  "1": "3",
                                  "2": "0",
                                  "3": "a",
                                  "4": "6",
                                  "5": "4",
                                  "6": "a",
                                  "dark": " #178b30",
                                  "light": "#42b45b",
                                },
                                "warning": String {
                                  "0": "#",
                                  "1": "f",
                                  "2": "f",
                                  "3": "9",
                                  "4": "9",
                                  "5": "2",
                                  "6": "6",
                                  "dark": "#ff8800",
                                  "light": "#ffa726",
                                },
                              }
                            }
                            type="primary"
                          >
                            <styled.button
                              disabled={false}
                              isLoading={false}
                              onClick={[Function]}
                              outline={true}
                              size="large"
                              text={false}
                              theme={
                                Object {
                                  "error": String {
                                    "0": "#",
                                    "1": "d",
                                    "2": "3",
                                    "3": "2",
                                    "4": "f",
                                    "5": "2",
                                    "6": "f",
                                    "dark": "#9e0707",
                                    "light": "#e54242",
                                  },
                                  "grey": String {
                                    "0": "#",
                                    "1": "7",
                                    "2": "3",
                                    "3": "7",
                                    "4": "3",
                                    "5": "7",
                                    "6": "3",
                                    "dark": "#202020",
                                    "light": "#838383",
                                  },
                                  "primary": String {
                                    "0": "#",
                                    "1": "5",
                                    "2": "7",
                                    "3": "0",
                                    "4": "7",
                                    "5": "e",
                                    "6": "b",
                                    "dark": "#4a0072",
                                    "light": "#6217ed",
                                  },
                                  "success": String {
                                    "0": "#",
                                    "1": "3",
                                    "2": "0",
                                    "3": "a",
                                    "4": "6",
                                    "5": "4",
                                    "6": "a",
                                    "dark": " #178b30",
                                    "light": "#42b45b",
                                  },
                                  "warning": String {
                                    "0": "#",
                                    "1": "f",
                                    "2": "f",
                                    "3": "9",
                                    "4": "9",
                                    "5": "2",
                                    "6": "6",
                                    "dark": "#ff8800",
                                    "light": "#ffa726",
                                  },
                                }
                              }
                              type="primary"
                            >
                              <StyledComponent
                                disabled={false}
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-gqjmRU",
                                      "isStatic": false,
                                      "lastClassName": "hdTOCm",
                                      "rules": Array [
                                        "
    border-radius: 4px;
    height: 40px;
    margin: 5px;
    width: ",
                                        [Function],
                                        ";
    max-width: 225px;
    text-transform: uppercase;
    font-size: 14px;

    letter-spacing: 0.12em;
    border-color: transparent;
    transition: all 0.2s;

    ",
                                        ".sc-gZMcBi",
                                        " {
        &:hover {
            cursor: ",
                                        [Function],
                                        ";
        }
    }

    ",
                                        [Function],
                                        ";
",
                                      ],
                                    },
                                    "displayName": "styled.button",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-gqjmRU",
                                    "target": "button",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                isLoading={false}
                                onClick={[Function]}
                                outline={true}
                                size="large"
                                text={false}
                                theme={
                                  Object {
                                    "error": String {
                                      "0": "#",
                                      "1": "d",
                                      "2": "3",
                                      "3": "2",
                                      "4": "f",
                                      "5": "2",
                                      "6": "f",
                                      "dark": "#9e0707",
                                      "light": "#e54242",
                                    },
                                    "grey": String {
                                      "0": "#",
                                      "1": "7",
                                      "2": "3",
                                      "3": "7",
                                      "4": "3",
                                      "5": "7",
                                      "6": "3",
                                      "dark": "#202020",
                                      "light": "#838383",
                                    },
                                    "primary": String {
                                      "0": "#",
                                      "1": "5",
                                      "2": "7",
                                      "3": "0",
                                      "4": "7",
                                      "5": "e",
                                      "6": "b",
                                      "dark": "#4a0072",
                                      "light": "#6217ed",
                                    },
                                    "success": String {
                                      "0": "#",
                                      "1": "3",
                                      "2": "0",
                                      "3": "a",
                                      "4": "6",
                                      "5": "4",
                                      "6": "a",
                                      "dark": " #178b30",
                                      "light": "#42b45b",
                                    },
                                    "warning": String {
                                      "0": "#",
                                      "1": "f",
                                      "2": "f",
                                      "3": "9",
                                      "4": "9",
                                      "5": "2",
                                      "6": "6",
                                      "dark": "#ff8800",
                                      "light": "#ffa726",
                                    },
                                  }
                                }
                                type="primary"
                              >
                                <button
                                  className="sc-gqjmRU bMmQyl"
                                  disabled={false}
                                  onClick={[Function]}
                                  size="large"
                                  type="primary"
                                >
                                  <styled.div>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-dnqmqq",
                                            "isStatic": false,
                                            "lastClassName": "jEdkgN",
                                            "rules": Array [
                                              "
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: transparent;

    user-select: none;
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-dnqmqq",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="sc-dnqmqq jEdkgN"
                                      >
                                        <styled.label>
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-gZMcBi",
                                                  "isStatic": false,
                                                  "lastClassName": "giNnHm",
                                                  "rules": Array [],
                                                },
                                                "displayName": "styled.label",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-gZMcBi",
                                                "target": "label",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <label
                                              className="sc-gZMcBi giNnHm"
                                            >
                                              I am custom
                                            </label>
                                          </StyledComponent>
                                        </styled.label>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                </button>
                              </StyledComponent>
                            </styled.button>
                          </Button>
                        </WithTheme(Button)>
                        <WithTheme(Button)
                          label="action"
                          onClick={[Function]}
                        >
                          <Button
                            disabled={false}
                            label="action"
                            onClick={[Function]}
                            outline={false}
                            size="large"
                            text={false}
                            theme={
                              Object {
                                "error": String {
                                  "0": "#",
                                  "1": "d",
                                  "2": "3",
                                  "3": "2",
                                  "4": "f",
                                  "5": "2",
                                  "6": "f",
                                  "dark": "#9e0707",
                                  "light": "#e54242",
                                },
                                "grey": String {
                                  "0": "#",
                                  "1": "7",
                                  "2": "3",
                                  "3": "7",
                                  "4": "3",
                                  "5": "7",
                                  "6": "3",
                                  "dark": "#202020",
                                  "light": "#838383",
                                },
                                "primary": String {
                                  "0": "#",
                                  "1": "5",
                                  "2": "7",
                                  "3": "0",
                                  "4": "7",
                                  "5": "e",
                                  "6": "b",
                                  "dark": "#4a0072",
                                  "light": "#6217ed",
                                },
                                "success": String {
                                  "0": "#",
                                  "1": "3",
                                  "2": "0",
                                  "3": "a",
                                  "4": "6",
                                  "5": "4",
                                  "6": "a",
                                  "dark": " #178b30",
                                  "light": "#42b45b",
                                },
                                "warning": String {
                                  "0": "#",
                                  "1": "f",
                                  "2": "f",
                                  "3": "9",
                                  "4": "9",
                                  "5": "2",
                                  "6": "6",
                                  "dark": "#ff8800",
                                  "light": "#ffa726",
                                },
                              }
                            }
                            type="primary"
                          >
                            <styled.button
                              disabled={false}
                              isLoading={false}
                              onClick={[Function]}
                              outline={false}
                              size="large"
                              text={false}
                              theme={
                                Object {
                                  "error": String {
                                    "0": "#",
                                    "1": "d",
                                    "2": "3",
                                    "3": "2",
                                    "4": "f",
                                    "5": "2",
                                    "6": "f",
                                    "dark": "#9e0707",
                                    "light": "#e54242",
                                  },
                                  "grey": String {
                                    "0": "#",
                                    "1": "7",
                                    "2": "3",
                                    "3": "7",
                                    "4": "3",
                                    "5": "7",
                                    "6": "3",
                                    "dark": "#202020",
                                    "light": "#838383",
                                  },
                                  "primary": String {
                                    "0": "#",
                                    "1": "5",
                                    "2": "7",
                                    "3": "0",
                                    "4": "7",
                                    "5": "e",
                                    "6": "b",
                                    "dark": "#4a0072",
                                    "light": "#6217ed",
                                  },
                                  "success": String {
                                    "0": "#",
                                    "1": "3",
                                    "2": "0",
                                    "3": "a",
                                    "4": "6",
                                    "5": "4",
                                    "6": "a",
                                    "dark": " #178b30",
                                    "light": "#42b45b",
                                  },
                                  "warning": String {
                                    "0": "#",
                                    "1": "f",
                                    "2": "f",
                                    "3": "9",
                                    "4": "9",
                                    "5": "2",
                                    "6": "6",
                                    "dark": "#ff8800",
                                    "light": "#ffa726",
                                  },
                                }
                              }
                              type="primary"
                            >
                              <StyledComponent
                                disabled={false}
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-gqjmRU",
                                      "isStatic": false,
                                      "lastClassName": "hdTOCm",
                                      "rules": Array [
                                        "
    border-radius: 4px;
    height: 40px;
    margin: 5px;
    width: ",
                                        [Function],
                                        ";
    max-width: 225px;
    text-transform: uppercase;
    font-size: 14px;

    letter-spacing: 0.12em;
    border-color: transparent;
    transition: all 0.2s;

    ",
                                        ".sc-gZMcBi",
                                        " {
        &:hover {
            cursor: ",
                                        [Function],
                                        ";
        }
    }

    ",
                                        [Function],
                                        ";
",
                                      ],
                                    },
                                    "displayName": "styled.button",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-gqjmRU",
                                    "target": "button",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                isLoading={false}
                                onClick={[Function]}
                                outline={false}
                                size="large"
                                text={false}
                                theme={
                                  Object {
                                    "error": String {
                                      "0": "#",
                                      "1": "d",
                                      "2": "3",
                                      "3": "2",
                                      "4": "f",
                                      "5": "2",
                                      "6": "f",
                                      "dark": "#9e0707",
                                      "light": "#e54242",
                                    },
                                    "grey": String {
                                      "0": "#",
                                      "1": "7",
                                      "2": "3",
                                      "3": "7",
                                      "4": "3",
                                      "5": "7",
                                      "6": "3",
                                      "dark": "#202020",
                                      "light": "#838383",
                                    },
                                    "primary": String {
                                      "0": "#",
                                      "1": "5",
                                      "2": "7",
                                      "3": "0",
                                      "4": "7",
                                      "5": "e",
                                      "6": "b",
                                      "dark": "#4a0072",
                                      "light": "#6217ed",
                                    },
                                    "success": String {
                                      "0": "#",
                                      "1": "3",
                                      "2": "0",
                                      "3": "a",
                                      "4": "6",
                                      "5": "4",
                                      "6": "a",
                                      "dark": " #178b30",
                                      "light": "#42b45b",
                                    },
                                    "warning": String {
                                      "0": "#",
                                      "1": "f",
                                      "2": "f",
                                      "3": "9",
                                      "4": "9",
                                      "5": "2",
                                      "6": "6",
                                      "dark": "#ff8800",
                                      "light": "#ffa726",
                                    },
                                  }
                                }
                                type="primary"
                              >
                                <button
                                  className="sc-gqjmRU hdTOCm"
                                  disabled={false}
                                  onClick={[Function]}
                                  size="large"
                                  type="primary"
                                >
                                  <styled.div>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-dnqmqq",
                                            "isStatic": false,
                                            "lastClassName": "jEdkgN",
                                            "rules": Array [
                                              "
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: transparent;

    user-select: none;
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-dnqmqq",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="sc-dnqmqq jEdkgN"
                                      >
                                        <styled.label>
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-gZMcBi",
                                                  "isStatic": false,
                                                  "lastClassName": "giNnHm",
                                                  "rules": Array [],
                                                },
                                                "displayName": "styled.label",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-gZMcBi",
                                                "target": "label",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <label
                                              className="sc-gZMcBi giNnHm"
                                            >
                                              action
                                            </label>
                                          </StyledComponent>
                                        </styled.label>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                </button>
                              </StyledComponent>
                            </styled.button>
                          </Button>
                        </WithTheme(Button)>
                      </div>
                    </StyledComponent>
                  </styled.div>
                </div>
              </StyledComponent>
            </styled.div>
          </div>
        </StyledComponent>
      </styled.div>
    </Portal>
  </Dialog>
</WithTheme(Dialog)>
`;

exports[`Dialog rendering should match the snapshot of error buttons 1`] = `
<WithTheme(Dialog)
  buttonType="error"
  cancelButton={
    Object {
      "onClick": [MockFunction],
    }
  }
  primaryButton={
    Object {
      "label": "action",
    }
  }
  renderBody={[Function]}
  show={true}
>
  <Dialog
    buttonType="error"
    cancelButton={
      Object {
        "onClick": [MockFunction],
      }
    }
    primaryButton={
      Object {
        "label": "action",
      }
    }
    renderBody={[Function]}
    show={true}
    theme={
      Object {
        "error": String {
          "0": "#",
          "1": "d",
          "2": "3",
          "3": "2",
          "4": "f",
          "5": "2",
          "6": "f",
          "dark": "#9e0707",
          "light": "#e54242",
        },
        "grey": String {
          "0": "#",
          "1": "7",
          "2": "3",
          "3": "7",
          "4": "3",
          "5": "7",
          "6": "3",
          "dark": "#202020",
          "light": "#838383",
        },
        "primary": String {
          "0": "#",
          "1": "5",
          "2": "7",
          "3": "0",
          "4": "7",
          "5": "e",
          "6": "b",
          "dark": "#4a0072",
          "light": "#6217ed",
        },
        "success": String {
          "0": "#",
          "1": "3",
          "2": "0",
          "3": "a",
          "4": "6",
          "5": "4",
          "6": "a",
          "dark": " #178b30",
          "light": "#42b45b",
        },
        "warning": String {
          "0": "#",
          "1": "f",
          "2": "f",
          "3": "9",
          "4": "9",
          "5": "2",
          "6": "6",
          "dark": "#ff8800",
          "light": "#ffa726",
        },
      }
    }
  >
    <Portal
      containerInfo={
        <body>
          <div
            class="sc-jKJlTe hfznNG"
          />
          <div
            class="sc-eNQAEJ cIkDah"
          >
            <div
              aria-hidden="true"
              aria-modal="true"
              class="sc-hMqMXs hSZYPX"
              role="dialog"
              tabindex="-1"
            >
              <div
                class="sc-kEYyzF dLpblE"
              >
                <div>
                  <p
                    id="content"
                  >
                    I am the body
                  </p>
                </div>
              </div>
              <div
                class="sc-kkGfuU juxXhN"
              >
                <button
                  class="sc-gqjmRU eZEQZm"
                  type="error"
                >
                  <div
                    class="sc-dnqmqq jEdkgN"
                  >
                    <label
                      class="sc-gZMcBi giNnHm"
                    >
                      Close
                    </label>
                  </div>
                </button>
                <button
                  class="sc-gqjmRU bhSFdN"
                  type="error"
                >
                  <div
                    class="sc-dnqmqq jEdkgN"
                  >
                    <label
                      class="sc-gZMcBi giNnHm"
                    >
                      action
                    </label>
                  </div>
                </button>
              </div>
            </div>
          </div>
        </body>
      }
    >
      <styled.div>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-jKJlTe",
                "isStatic": false,
                "lastClassName": "hfznNG",
                "rules": Array [
                  "
    position: fixed;
    top: 0;
    left: 0;
    z-index: 100;
    width: 100vw;
    height: 100vh;
    background-color: #000;
    opacity: 0.5;
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-jKJlTe",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <div
            className="sc-jKJlTe hfznNG"
          />
        </StyledComponent>
      </styled.div>
      <styled.div>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-eNQAEJ",
                "isStatic": false,
                "lastClassName": "cIkDah",
                "rules": Array [
                  "
    position: fixed;
    top: 0;
    left: 0;
    z-index: 101;
    width: 100%;
    height: 100%;
    overflow-x: hidden;
    overflow-y: auto;
    outline: 0;
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-eNQAEJ",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <div
            className="sc-eNQAEJ cIkDah"
          >
            <styled.div
              aria-hidden={true}
              aria-modal={true}
              role="dialog"
              tabIndex={-1}
            >
              <StyledComponent
                aria-hidden={true}
                aria-modal={true}
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-hMqMXs",
                      "isStatic": false,
                      "lastClassName": "hSZYPX",
                      "rules": Array [
                        "
    z-index: 100;
    background: white;
    margin: 0;
    position: absolute;
    padding: 10px 20px;
    min-width: 300px;
    min-height: 150px;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    border-radius: 3px;
    display: flex;
    flex-direction: column;
",
                      ],
                    },
                    "displayName": "styled.div",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-hMqMXs",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                role="dialog"
                tabIndex={-1}
              >
                <div
                  aria-hidden={true}
                  aria-modal={true}
                  className="sc-hMqMXs hSZYPX"
                  role="dialog"
                  tabIndex={-1}
                >
                  <styled.div>
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-kEYyzF",
                            "isStatic": false,
                            "lastClassName": "dLpblE",
                            "rules": Array [
                              "
    max-height: 70vh;
    overflow: scroll;
    height: 100%;
    margin-bottom: 1rem;
",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-kEYyzF",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <div
                        className="sc-kEYyzF dLpblE"
                      >
                        <div>
                          <p
                            id="content"
                          >
                            I am the body
                          </p>
                        </div>
                      </div>
                    </StyledComponent>
                  </styled.div>
                  <styled.div>
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-kkGfuU",
                            "isStatic": false,
                            "lastClassName": "juxXhN",
                            "rules": Array [
                              "
    margin-top: auto;
    display: flex;
    justify-content: center;
",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-kkGfuU",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <div
                        className="sc-kkGfuU juxXhN"
                      >
                        <WithTheme(Button)
                          label="Close"
                          onClick={[Function]}
                          outline={true}
                          type="error"
                        >
                          <Button
                            disabled={false}
                            label="Close"
                            onClick={[Function]}
                            outline={true}
                            size="large"
                            text={false}
                            theme={
                              Object {
                                "error": String {
                                  "0": "#",
                                  "1": "d",
                                  "2": "3",
                                  "3": "2",
                                  "4": "f",
                                  "5": "2",
                                  "6": "f",
                                  "dark": "#9e0707",
                                  "light": "#e54242",
                                },
                                "grey": String {
                                  "0": "#",
                                  "1": "7",
                                  "2": "3",
                                  "3": "7",
                                  "4": "3",
                                  "5": "7",
                                  "6": "3",
                                  "dark": "#202020",
                                  "light": "#838383",
                                },
                                "primary": String {
                                  "0": "#",
                                  "1": "5",
                                  "2": "7",
                                  "3": "0",
                                  "4": "7",
                                  "5": "e",
                                  "6": "b",
                                  "dark": "#4a0072",
                                  "light": "#6217ed",
                                },
                                "success": String {
                                  "0": "#",
                                  "1": "3",
                                  "2": "0",
                                  "3": "a",
                                  "4": "6",
                                  "5": "4",
                                  "6": "a",
                                  "dark": " #178b30",
                                  "light": "#42b45b",
                                },
                                "warning": String {
                                  "0": "#",
                                  "1": "f",
                                  "2": "f",
                                  "3": "9",
                                  "4": "9",
                                  "5": "2",
                                  "6": "6",
                                  "dark": "#ff8800",
                                  "light": "#ffa726",
                                },
                              }
                            }
                            type="error"
                          >
                            <styled.button
                              disabled={false}
                              isLoading={false}
                              onClick={[Function]}
                              outline={true}
                              size="large"
                              text={false}
                              theme={
                                Object {
                                  "error": String {
                                    "0": "#",
                                    "1": "d",
                                    "2": "3",
                                    "3": "2",
                                    "4": "f",
                                    "5": "2",
                                    "6": "f",
                                    "dark": "#9e0707",
                                    "light": "#e54242",
                                  },
                                  "grey": String {
                                    "0": "#",
                                    "1": "7",
                                    "2": "3",
                                    "3": "7",
                                    "4": "3",
                                    "5": "7",
                                    "6": "3",
                                    "dark": "#202020",
                                    "light": "#838383",
                                  },
                                  "primary": String {
                                    "0": "#",
                                    "1": "5",
                                    "2": "7",
                                    "3": "0",
                                    "4": "7",
                                    "5": "e",
                                    "6": "b",
                                    "dark": "#4a0072",
                                    "light": "#6217ed",
                                  },
                                  "success": String {
                                    "0": "#",
                                    "1": "3",
                                    "2": "0",
                                    "3": "a",
                                    "4": "6",
                                    "5": "4",
                                    "6": "a",
                                    "dark": " #178b30",
                                    "light": "#42b45b",
                                  },
                                  "warning": String {
                                    "0": "#",
                                    "1": "f",
                                    "2": "f",
                                    "3": "9",
                                    "4": "9",
                                    "5": "2",
                                    "6": "6",
                                    "dark": "#ff8800",
                                    "light": "#ffa726",
                                  },
                                }
                              }
                              type="error"
                            >
                              <StyledComponent
                                disabled={false}
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-gqjmRU",
                                      "isStatic": false,
                                      "lastClassName": "bhSFdN",
                                      "rules": Array [
                                        "
    border-radius: 4px;
    height: 40px;
    margin: 5px;
    width: ",
                                        [Function],
                                        ";
    max-width: 225px;
    text-transform: uppercase;
    font-size: 14px;

    letter-spacing: 0.12em;
    border-color: transparent;
    transition: all 0.2s;

    ",
                                        ".sc-gZMcBi",
                                        " {
        &:hover {
            cursor: ",
                                        [Function],
                                        ";
        }
    }

    ",
                                        [Function],
                                        ";
",
                                      ],
                                    },
                                    "displayName": "styled.button",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-gqjmRU",
                                    "target": "button",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                isLoading={false}
                                onClick={[Function]}
                                outline={true}
                                size="large"
                                text={false}
                                theme={
                                  Object {
                                    "error": String {
                                      "0": "#",
                                      "1": "d",
                                      "2": "3",
                                      "3": "2",
                                      "4": "f",
                                      "5": "2",
                                      "6": "f",
                                      "dark": "#9e0707",
                                      "light": "#e54242",
                                    },
                                    "grey": String {
                                      "0": "#",
                                      "1": "7",
                                      "2": "3",
                                      "3": "7",
                                      "4": "3",
                                      "5": "7",
                                      "6": "3",
                                      "dark": "#202020",
                                      "light": "#838383",
                                    },
                                    "primary": String {
                                      "0": "#",
                                      "1": "5",
                                      "2": "7",
                                      "3": "0",
                                      "4": "7",
                                      "5": "e",
                                      "6": "b",
                                      "dark": "#4a0072",
                                      "light": "#6217ed",
                                    },
                                    "success": String {
                                      "0": "#",
                                      "1": "3",
                                      "2": "0",
                                      "3": "a",
                                      "4": "6",
                                      "5": "4",
                                      "6": "a",
                                      "dark": " #178b30",
                                      "light": "#42b45b",
                                    },
                                    "warning": String {
                                      "0": "#",
                                      "1": "f",
                                      "2": "f",
                                      "3": "9",
                                      "4": "9",
                                      "5": "2",
                                      "6": "6",
                                      "dark": "#ff8800",
                                      "light": "#ffa726",
                                    },
                                  }
                                }
                                type="error"
                              >
                                <button
                                  className="sc-gqjmRU eZEQZm"
                                  disabled={false}
                                  onClick={[Function]}
                                  size="large"
                                  type="error"
                                >
                                  <styled.div>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-dnqmqq",
                                            "isStatic": false,
                                            "lastClassName": "jEdkgN",
                                            "rules": Array [
                                              "
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: transparent;

    user-select: none;
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-dnqmqq",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="sc-dnqmqq jEdkgN"
                                      >
                                        <styled.label>
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-gZMcBi",
                                                  "isStatic": false,
                                                  "lastClassName": "giNnHm",
                                                  "rules": Array [],
                                                },
                                                "displayName": "styled.label",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-gZMcBi",
                                                "target": "label",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <label
                                              className="sc-gZMcBi giNnHm"
                                            >
                                              Close
                                            </label>
                                          </StyledComponent>
                                        </styled.label>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                </button>
                              </StyledComponent>
                            </styled.button>
                          </Button>
                        </WithTheme(Button)>
                        <WithTheme(Button)
                          label="action"
                          onClick={[Function]}
                          type="error"
                        >
                          <Button
                            disabled={false}
                            label="action"
                            onClick={[Function]}
                            outline={false}
                            size="large"
                            text={false}
                            theme={
                              Object {
                                "error": String {
                                  "0": "#",
                                  "1": "d",
                                  "2": "3",
                                  "3": "2",
                                  "4": "f",
                                  "5": "2",
                                  "6": "f",
                                  "dark": "#9e0707",
                                  "light": "#e54242",
                                },
                                "grey": String {
                                  "0": "#",
                                  "1": "7",
                                  "2": "3",
                                  "3": "7",
                                  "4": "3",
                                  "5": "7",
                                  "6": "3",
                                  "dark": "#202020",
                                  "light": "#838383",
                                },
                                "primary": String {
                                  "0": "#",
                                  "1": "5",
                                  "2": "7",
                                  "3": "0",
                                  "4": "7",
                                  "5": "e",
                                  "6": "b",
                                  "dark": "#4a0072",
                                  "light": "#6217ed",
                                },
                                "success": String {
                                  "0": "#",
                                  "1": "3",
                                  "2": "0",
                                  "3": "a",
                                  "4": "6",
                                  "5": "4",
                                  "6": "a",
                                  "dark": " #178b30",
                                  "light": "#42b45b",
                                },
                                "warning": String {
                                  "0": "#",
                                  "1": "f",
                                  "2": "f",
                                  "3": "9",
                                  "4": "9",
                                  "5": "2",
                                  "6": "6",
                                  "dark": "#ff8800",
                                  "light": "#ffa726",
                                },
                              }
                            }
                            type="error"
                          >
                            <styled.button
                              disabled={false}
                              isLoading={false}
                              onClick={[Function]}
                              outline={false}
                              size="large"
                              text={false}
                              theme={
                                Object {
                                  "error": String {
                                    "0": "#",
                                    "1": "d",
                                    "2": "3",
                                    "3": "2",
                                    "4": "f",
                                    "5": "2",
                                    "6": "f",
                                    "dark": "#9e0707",
                                    "light": "#e54242",
                                  },
                                  "grey": String {
                                    "0": "#",
                                    "1": "7",
                                    "2": "3",
                                    "3": "7",
                                    "4": "3",
                                    "5": "7",
                                    "6": "3",
                                    "dark": "#202020",
                                    "light": "#838383",
                                  },
                                  "primary": String {
                                    "0": "#",
                                    "1": "5",
                                    "2": "7",
                                    "3": "0",
                                    "4": "7",
                                    "5": "e",
                                    "6": "b",
                                    "dark": "#4a0072",
                                    "light": "#6217ed",
                                  },
                                  "success": String {
                                    "0": "#",
                                    "1": "3",
                                    "2": "0",
                                    "3": "a",
                                    "4": "6",
                                    "5": "4",
                                    "6": "a",
                                    "dark": " #178b30",
                                    "light": "#42b45b",
                                  },
                                  "warning": String {
                                    "0": "#",
                                    "1": "f",
                                    "2": "f",
                                    "3": "9",
                                    "4": "9",
                                    "5": "2",
                                    "6": "6",
                                    "dark": "#ff8800",
                                    "light": "#ffa726",
                                  },
                                }
                              }
                              type="error"
                            >
                              <StyledComponent
                                disabled={false}
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-gqjmRU",
                                      "isStatic": false,
                                      "lastClassName": "bhSFdN",
                                      "rules": Array [
                                        "
    border-radius: 4px;
    height: 40px;
    margin: 5px;
    width: ",
                                        [Function],
                                        ";
    max-width: 225px;
    text-transform: uppercase;
    font-size: 14px;

    letter-spacing: 0.12em;
    border-color: transparent;
    transition: all 0.2s;

    ",
                                        ".sc-gZMcBi",
                                        " {
        &:hover {
            cursor: ",
                                        [Function],
                                        ";
        }
    }

    ",
                                        [Function],
                                        ";
",
                                      ],
                                    },
                                    "displayName": "styled.button",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-gqjmRU",
                                    "target": "button",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                isLoading={false}
                                onClick={[Function]}
                                outline={false}
                                size="large"
                                text={false}
                                theme={
                                  Object {
                                    "error": String {
                                      "0": "#",
                                      "1": "d",
                                      "2": "3",
                                      "3": "2",
                                      "4": "f",
                                      "5": "2",
                                      "6": "f",
                                      "dark": "#9e0707",
                                      "light": "#e54242",
                                    },
                                    "grey": String {
                                      "0": "#",
                                      "1": "7",
                                      "2": "3",
                                      "3": "7",
                                      "4": "3",
                                      "5": "7",
                                      "6": "3",
                                      "dark": "#202020",
                                      "light": "#838383",
                                    },
                                    "primary": String {
                                      "0": "#",
                                      "1": "5",
                                      "2": "7",
                                      "3": "0",
                                      "4": "7",
                                      "5": "e",
                                      "6": "b",
                                      "dark": "#4a0072",
                                      "light": "#6217ed",
                                    },
                                    "success": String {
                                      "0": "#",
                                      "1": "3",
                                      "2": "0",
                                      "3": "a",
                                      "4": "6",
                                      "5": "4",
                                      "6": "a",
                                      "dark": " #178b30",
                                      "light": "#42b45b",
                                    },
                                    "warning": String {
                                      "0": "#",
                                      "1": "f",
                                      "2": "f",
                                      "3": "9",
                                      "4": "9",
                                      "5": "2",
                                      "6": "6",
                                      "dark": "#ff8800",
                                      "light": "#ffa726",
                                    },
                                  }
                                }
                                type="error"
                              >
                                <button
                                  className="sc-gqjmRU bhSFdN"
                                  disabled={false}
                                  onClick={[Function]}
                                  size="large"
                                  type="error"
                                >
                                  <styled.div>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-dnqmqq",
                                            "isStatic": false,
                                            "lastClassName": "jEdkgN",
                                            "rules": Array [
                                              "
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: transparent;

    user-select: none;
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-dnqmqq",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="sc-dnqmqq jEdkgN"
                                      >
                                        <styled.label>
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-gZMcBi",
                                                  "isStatic": false,
                                                  "lastClassName": "giNnHm",
                                                  "rules": Array [],
                                                },
                                                "displayName": "styled.label",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-gZMcBi",
                                                "target": "label",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <label
                                              className="sc-gZMcBi giNnHm"
                                            >
                                              action
                                            </label>
                                          </StyledComponent>
                                        </styled.label>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                </button>
                              </StyledComponent>
                            </styled.button>
                          </Button>
                        </WithTheme(Button)>
                      </div>
                    </StyledComponent>
                  </styled.div>
                </div>
              </StyledComponent>
            </styled.div>
          </div>
        </StyledComponent>
      </styled.div>
    </Portal>
  </Dialog>
</WithTheme(Dialog)>
`;

exports[`Dialog rendering should match the snapshot of success buttons 1`] = `
<WithTheme(Dialog)
  buttonType="success"
  cancelButton={
    Object {
      "onClick": [MockFunction],
    }
  }
  primaryButton={
    Object {
      "label": "action",
    }
  }
  renderBody={[Function]}
  show={true}
>
  <Dialog
    buttonType="success"
    cancelButton={
      Object {
        "onClick": [MockFunction],
      }
    }
    primaryButton={
      Object {
        "label": "action",
      }
    }
    renderBody={[Function]}
    show={true}
    theme={
      Object {
        "error": String {
          "0": "#",
          "1": "d",
          "2": "3",
          "3": "2",
          "4": "f",
          "5": "2",
          "6": "f",
          "dark": "#9e0707",
          "light": "#e54242",
        },
        "grey": String {
          "0": "#",
          "1": "7",
          "2": "3",
          "3": "7",
          "4": "3",
          "5": "7",
          "6": "3",
          "dark": "#202020",
          "light": "#838383",
        },
        "primary": String {
          "0": "#",
          "1": "5",
          "2": "7",
          "3": "0",
          "4": "7",
          "5": "e",
          "6": "b",
          "dark": "#4a0072",
          "light": "#6217ed",
        },
        "success": String {
          "0": "#",
          "1": "3",
          "2": "0",
          "3": "a",
          "4": "6",
          "5": "4",
          "6": "a",
          "dark": " #178b30",
          "light": "#42b45b",
        },
        "warning": String {
          "0": "#",
          "1": "f",
          "2": "f",
          "3": "9",
          "4": "9",
          "5": "2",
          "6": "6",
          "dark": "#ff8800",
          "light": "#ffa726",
        },
      }
    }
  >
    <Portal
      containerInfo={
        <body>
          <div
            class="sc-jKJlTe hfznNG"
          />
          <div
            class="sc-eNQAEJ cIkDah"
          >
            <div
              aria-hidden="true"
              aria-modal="true"
              class="sc-hMqMXs hSZYPX"
              role="dialog"
              tabindex="-1"
            >
              <div
                class="sc-kEYyzF dLpblE"
              >
                <div>
                  <p
                    id="content"
                  >
                    I am the body
                  </p>
                </div>
              </div>
              <div
                class="sc-kkGfuU juxXhN"
              >
                <button
                  class="sc-gqjmRU gIFmBP"
                  type="success"
                >
                  <div
                    class="sc-dnqmqq jEdkgN"
                  >
                    <label
                      class="sc-gZMcBi giNnHm"
                    >
                      Close
                    </label>
                  </div>
                </button>
                <button
                  class="sc-gqjmRU bPpnpH"
                  type="success"
                >
                  <div
                    class="sc-dnqmqq jEdkgN"
                  >
                    <label
                      class="sc-gZMcBi giNnHm"
                    >
                      action
                    </label>
                  </div>
                </button>
              </div>
            </div>
          </div>
        </body>
      }
    >
      <styled.div>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-jKJlTe",
                "isStatic": false,
                "lastClassName": "hfznNG",
                "rules": Array [
                  "
    position: fixed;
    top: 0;
    left: 0;
    z-index: 100;
    width: 100vw;
    height: 100vh;
    background-color: #000;
    opacity: 0.5;
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-jKJlTe",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <div
            className="sc-jKJlTe hfznNG"
          />
        </StyledComponent>
      </styled.div>
      <styled.div>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-eNQAEJ",
                "isStatic": false,
                "lastClassName": "cIkDah",
                "rules": Array [
                  "
    position: fixed;
    top: 0;
    left: 0;
    z-index: 101;
    width: 100%;
    height: 100%;
    overflow-x: hidden;
    overflow-y: auto;
    outline: 0;
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-eNQAEJ",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <div
            className="sc-eNQAEJ cIkDah"
          >
            <styled.div
              aria-hidden={true}
              aria-modal={true}
              role="dialog"
              tabIndex={-1}
            >
              <StyledComponent
                aria-hidden={true}
                aria-modal={true}
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-hMqMXs",
                      "isStatic": false,
                      "lastClassName": "hSZYPX",
                      "rules": Array [
                        "
    z-index: 100;
    background: white;
    margin: 0;
    position: absolute;
    padding: 10px 20px;
    min-width: 300px;
    min-height: 150px;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    border-radius: 3px;
    display: flex;
    flex-direction: column;
",
                      ],
                    },
                    "displayName": "styled.div",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-hMqMXs",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                role="dialog"
                tabIndex={-1}
              >
                <div
                  aria-hidden={true}
                  aria-modal={true}
                  className="sc-hMqMXs hSZYPX"
                  role="dialog"
                  tabIndex={-1}
                >
                  <styled.div>
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-kEYyzF",
                            "isStatic": false,
                            "lastClassName": "dLpblE",
                            "rules": Array [
                              "
    max-height: 70vh;
    overflow: scroll;
    height: 100%;
    margin-bottom: 1rem;
",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-kEYyzF",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <div
                        className="sc-kEYyzF dLpblE"
                      >
                        <div>
                          <p
                            id="content"
                          >
                            I am the body
                          </p>
                        </div>
                      </div>
                    </StyledComponent>
                  </styled.div>
                  <styled.div>
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-kkGfuU",
                            "isStatic": false,
                            "lastClassName": "juxXhN",
                            "rules": Array [
                              "
    margin-top: auto;
    display: flex;
    justify-content: center;
",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-kkGfuU",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <div
                        className="sc-kkGfuU juxXhN"
                      >
                        <WithTheme(Button)
                          label="Close"
                          onClick={[Function]}
                          outline={true}
                          type="success"
                        >
                          <Button
                            disabled={false}
                            label="Close"
                            onClick={[Function]}
                            outline={true}
                            size="large"
                            text={false}
                            theme={
                              Object {
                                "error": String {
                                  "0": "#",
                                  "1": "d",
                                  "2": "3",
                                  "3": "2",
                                  "4": "f",
                                  "5": "2",
                                  "6": "f",
                                  "dark": "#9e0707",
                                  "light": "#e54242",
                                },
                                "grey": String {
                                  "0": "#",
                                  "1": "7",
                                  "2": "3",
                                  "3": "7",
                                  "4": "3",
                                  "5": "7",
                                  "6": "3",
                                  "dark": "#202020",
                                  "light": "#838383",
                                },
                                "primary": String {
                                  "0": "#",
                                  "1": "5",
                                  "2": "7",
                                  "3": "0",
                                  "4": "7",
                                  "5": "e",
                                  "6": "b",
                                  "dark": "#4a0072",
                                  "light": "#6217ed",
                                },
                                "success": String {
                                  "0": "#",
                                  "1": "3",
                                  "2": "0",
                                  "3": "a",
                                  "4": "6",
                                  "5": "4",
                                  "6": "a",
                                  "dark": " #178b30",
                                  "light": "#42b45b",
                                },
                                "warning": String {
                                  "0": "#",
                                  "1": "f",
                                  "2": "f",
                                  "3": "9",
                                  "4": "9",
                                  "5": "2",
                                  "6": "6",
                                  "dark": "#ff8800",
                                  "light": "#ffa726",
                                },
                              }
                            }
                            type="success"
                          >
                            <styled.button
                              disabled={false}
                              isLoading={false}
                              onClick={[Function]}
                              outline={true}
                              size="large"
                              text={false}
                              theme={
                                Object {
                                  "error": String {
                                    "0": "#",
                                    "1": "d",
                                    "2": "3",
                                    "3": "2",
                                    "4": "f",
                                    "5": "2",
                                    "6": "f",
                                    "dark": "#9e0707",
                                    "light": "#e54242",
                                  },
                                  "grey": String {
                                    "0": "#",
                                    "1": "7",
                                    "2": "3",
                                    "3": "7",
                                    "4": "3",
                                    "5": "7",
                                    "6": "3",
                                    "dark": "#202020",
                                    "light": "#838383",
                                  },
                                  "primary": String {
                                    "0": "#",
                                    "1": "5",
                                    "2": "7",
                                    "3": "0",
                                    "4": "7",
                                    "5": "e",
                                    "6": "b",
                                    "dark": "#4a0072",
                                    "light": "#6217ed",
                                  },
                                  "success": String {
                                    "0": "#",
                                    "1": "3",
                                    "2": "0",
                                    "3": "a",
                                    "4": "6",
                                    "5": "4",
                                    "6": "a",
                                    "dark": " #178b30",
                                    "light": "#42b45b",
                                  },
                                  "warning": String {
                                    "0": "#",
                                    "1": "f",
                                    "2": "f",
                                    "3": "9",
                                    "4": "9",
                                    "5": "2",
                                    "6": "6",
                                    "dark": "#ff8800",
                                    "light": "#ffa726",
                                  },
                                }
                              }
                              type="success"
                            >
                              <StyledComponent
                                disabled={false}
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-gqjmRU",
                                      "isStatic": false,
                                      "lastClassName": "bPpnpH",
                                      "rules": Array [
                                        "
    border-radius: 4px;
    height: 40px;
    margin: 5px;
    width: ",
                                        [Function],
                                        ";
    max-width: 225px;
    text-transform: uppercase;
    font-size: 14px;

    letter-spacing: 0.12em;
    border-color: transparent;
    transition: all 0.2s;

    ",
                                        ".sc-gZMcBi",
                                        " {
        &:hover {
            cursor: ",
                                        [Function],
                                        ";
        }
    }

    ",
                                        [Function],
                                        ";
",
                                      ],
                                    },
                                    "displayName": "styled.button",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-gqjmRU",
                                    "target": "button",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                isLoading={false}
                                onClick={[Function]}
                                outline={true}
                                size="large"
                                text={false}
                                theme={
                                  Object {
                                    "error": String {
                                      "0": "#",
                                      "1": "d",
                                      "2": "3",
                                      "3": "2",
                                      "4": "f",
                                      "5": "2",
                                      "6": "f",
                                      "dark": "#9e0707",
                                      "light": "#e54242",
                                    },
                                    "grey": String {
                                      "0": "#",
                                      "1": "7",
                                      "2": "3",
                                      "3": "7",
                                      "4": "3",
                                      "5": "7",
                                      "6": "3",
                                      "dark": "#202020",
                                      "light": "#838383",
                                    },
                                    "primary": String {
                                      "0": "#",
                                      "1": "5",
                                      "2": "7",
                                      "3": "0",
                                      "4": "7",
                                      "5": "e",
                                      "6": "b",
                                      "dark": "#4a0072",
                                      "light": "#6217ed",
                                    },
                                    "success": String {
                                      "0": "#",
                                      "1": "3",
                                      "2": "0",
                                      "3": "a",
                                      "4": "6",
                                      "5": "4",
                                      "6": "a",
                                      "dark": " #178b30",
                                      "light": "#42b45b",
                                    },
                                    "warning": String {
                                      "0": "#",
                                      "1": "f",
                                      "2": "f",
                                      "3": "9",
                                      "4": "9",
                                      "5": "2",
                                      "6": "6",
                                      "dark": "#ff8800",
                                      "light": "#ffa726",
                                    },
                                  }
                                }
                                type="success"
                              >
                                <button
                                  className="sc-gqjmRU gIFmBP"
                                  disabled={false}
                                  onClick={[Function]}
                                  size="large"
                                  type="success"
                                >
                                  <styled.div>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-dnqmqq",
                                            "isStatic": false,
                                            "lastClassName": "jEdkgN",
                                            "rules": Array [
                                              "
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: transparent;

    user-select: none;
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-dnqmqq",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="sc-dnqmqq jEdkgN"
                                      >
                                        <styled.label>
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-gZMcBi",
                                                  "isStatic": false,
                                                  "lastClassName": "giNnHm",
                                                  "rules": Array [],
                                                },
                                                "displayName": "styled.label",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-gZMcBi",
                                                "target": "label",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <label
                                              className="sc-gZMcBi giNnHm"
                                            >
                                              Close
                                            </label>
                                          </StyledComponent>
                                        </styled.label>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                </button>
                              </StyledComponent>
                            </styled.button>
                          </Button>
                        </WithTheme(Button)>
                        <WithTheme(Button)
                          label="action"
                          onClick={[Function]}
                          type="success"
                        >
                          <Button
                            disabled={false}
                            label="action"
                            onClick={[Function]}
                            outline={false}
                            size="large"
                            text={false}
                            theme={
                              Object {
                                "error": String {
                                  "0": "#",
                                  "1": "d",
                                  "2": "3",
                                  "3": "2",
                                  "4": "f",
                                  "5": "2",
                                  "6": "f",
                                  "dark": "#9e0707",
                                  "light": "#e54242",
                                },
                                "grey": String {
                                  "0": "#",
                                  "1": "7",
                                  "2": "3",
                                  "3": "7",
                                  "4": "3",
                                  "5": "7",
                                  "6": "3",
                                  "dark": "#202020",
                                  "light": "#838383",
                                },
                                "primary": String {
                                  "0": "#",
                                  "1": "5",
                                  "2": "7",
                                  "3": "0",
                                  "4": "7",
                                  "5": "e",
                                  "6": "b",
                                  "dark": "#4a0072",
                                  "light": "#6217ed",
                                },
                                "success": String {
                                  "0": "#",
                                  "1": "3",
                                  "2": "0",
                                  "3": "a",
                                  "4": "6",
                                  "5": "4",
                                  "6": "a",
                                  "dark": " #178b30",
                                  "light": "#42b45b",
                                },
                                "warning": String {
                                  "0": "#",
                                  "1": "f",
                                  "2": "f",
                                  "3": "9",
                                  "4": "9",
                                  "5": "2",
                                  "6": "6",
                                  "dark": "#ff8800",
                                  "light": "#ffa726",
                                },
                              }
                            }
                            type="success"
                          >
                            <styled.button
                              disabled={false}
                              isLoading={false}
                              onClick={[Function]}
                              outline={false}
                              size="large"
                              text={false}
                              theme={
                                Object {
                                  "error": String {
                                    "0": "#",
                                    "1": "d",
                                    "2": "3",
                                    "3": "2",
                                    "4": "f",
                                    "5": "2",
                                    "6": "f",
                                    "dark": "#9e0707",
                                    "light": "#e54242",
                                  },
                                  "grey": String {
                                    "0": "#",
                                    "1": "7",
                                    "2": "3",
                                    "3": "7",
                                    "4": "3",
                                    "5": "7",
                                    "6": "3",
                                    "dark": "#202020",
                                    "light": "#838383",
                                  },
                                  "primary": String {
                                    "0": "#",
                                    "1": "5",
                                    "2": "7",
                                    "3": "0",
                                    "4": "7",
                                    "5": "e",
                                    "6": "b",
                                    "dark": "#4a0072",
                                    "light": "#6217ed",
                                  },
                                  "success": String {
                                    "0": "#",
                                    "1": "3",
                                    "2": "0",
                                    "3": "a",
                                    "4": "6",
                                    "5": "4",
                                    "6": "a",
                                    "dark": " #178b30",
                                    "light": "#42b45b",
                                  },
                                  "warning": String {
                                    "0": "#",
                                    "1": "f",
                                    "2": "f",
                                    "3": "9",
                                    "4": "9",
                                    "5": "2",
                                    "6": "6",
                                    "dark": "#ff8800",
                                    "light": "#ffa726",
                                  },
                                }
                              }
                              type="success"
                            >
                              <StyledComponent
                                disabled={false}
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-gqjmRU",
                                      "isStatic": false,
                                      "lastClassName": "bPpnpH",
                                      "rules": Array [
                                        "
    border-radius: 4px;
    height: 40px;
    margin: 5px;
    width: ",
                                        [Function],
                                        ";
    max-width: 225px;
    text-transform: uppercase;
    font-size: 14px;

    letter-spacing: 0.12em;
    border-color: transparent;
    transition: all 0.2s;

    ",
                                        ".sc-gZMcBi",
                                        " {
        &:hover {
            cursor: ",
                                        [Function],
                                        ";
        }
    }

    ",
                                        [Function],
                                        ";
",
                                      ],
                                    },
                                    "displayName": "styled.button",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-gqjmRU",
                                    "target": "button",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                isLoading={false}
                                onClick={[Function]}
                                outline={false}
                                size="large"
                                text={false}
                                theme={
                                  Object {
                                    "error": String {
                                      "0": "#",
                                      "1": "d",
                                      "2": "3",
                                      "3": "2",
                                      "4": "f",
                                      "5": "2",
                                      "6": "f",
                                      "dark": "#9e0707",
                                      "light": "#e54242",
                                    },
                                    "grey": String {
                                      "0": "#",
                                      "1": "7",
                                      "2": "3",
                                      "3": "7",
                                      "4": "3",
                                      "5": "7",
                                      "6": "3",
                                      "dark": "#202020",
                                      "light": "#838383",
                                    },
                                    "primary": String {
                                      "0": "#",
                                      "1": "5",
                                      "2": "7",
                                      "3": "0",
                                      "4": "7",
                                      "5": "e",
                                      "6": "b",
                                      "dark": "#4a0072",
                                      "light": "#6217ed",
                                    },
                                    "success": String {
                                      "0": "#",
                                      "1": "3",
                                      "2": "0",
                                      "3": "a",
                                      "4": "6",
                                      "5": "4",
                                      "6": "a",
                                      "dark": " #178b30",
                                      "light": "#42b45b",
                                    },
                                    "warning": String {
                                      "0": "#",
                                      "1": "f",
                                      "2": "f",
                                      "3": "9",
                                      "4": "9",
                                      "5": "2",
                                      "6": "6",
                                      "dark": "#ff8800",
                                      "light": "#ffa726",
                                    },
                                  }
                                }
                                type="success"
                              >
                                <button
                                  className="sc-gqjmRU bPpnpH"
                                  disabled={false}
                                  onClick={[Function]}
                                  size="large"
                                  type="success"
                                >
                                  <styled.div>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-dnqmqq",
                                            "isStatic": false,
                                            "lastClassName": "jEdkgN",
                                            "rules": Array [
                                              "
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: transparent;

    user-select: none;
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-dnqmqq",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="sc-dnqmqq jEdkgN"
                                      >
                                        <styled.label>
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-gZMcBi",
                                                  "isStatic": false,
                                                  "lastClassName": "giNnHm",
                                                  "rules": Array [],
                                                },
                                                "displayName": "styled.label",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-gZMcBi",
                                                "target": "label",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <label
                                              className="sc-gZMcBi giNnHm"
                                            >
                                              action
                                            </label>
                                          </StyledComponent>
                                        </styled.label>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                </button>
                              </StyledComponent>
                            </styled.button>
                          </Button>
                        </WithTheme(Button)>
                      </div>
                    </StyledComponent>
                  </styled.div>
                </div>
              </StyledComponent>
            </styled.div>
          </div>
        </StyledComponent>
      </styled.div>
    </Portal>
  </Dialog>
</WithTheme(Dialog)>
`;

exports[`Dialog rendering should match the snapshot of the disabled action button 1`] = `
<WithTheme(Dialog)
  cancelButton={
    Object {
      "onClick": [MockFunction],
    }
  }
  disablePrimaryButton={true}
  primaryButton={
    Object {
      "label": "action",
    }
  }
  renderBody={[Function]}
  show={true}
>
  <Dialog
    cancelButton={
      Object {
        "onClick": [MockFunction],
      }
    }
    disablePrimaryButton={true}
    primaryButton={
      Object {
        "label": "action",
      }
    }
    renderBody={[Function]}
    show={true}
    theme={
      Object {
        "error": String {
          "0": "#",
          "1": "d",
          "2": "3",
          "3": "2",
          "4": "f",
          "5": "2",
          "6": "f",
          "dark": "#9e0707",
          "light": "#e54242",
        },
        "grey": String {
          "0": "#",
          "1": "7",
          "2": "3",
          "3": "7",
          "4": "3",
          "5": "7",
          "6": "3",
          "dark": "#202020",
          "light": "#838383",
        },
        "primary": String {
          "0": "#",
          "1": "5",
          "2": "7",
          "3": "0",
          "4": "7",
          "5": "e",
          "6": "b",
          "dark": "#4a0072",
          "light": "#6217ed",
        },
        "success": String {
          "0": "#",
          "1": "3",
          "2": "0",
          "3": "a",
          "4": "6",
          "5": "4",
          "6": "a",
          "dark": " #178b30",
          "light": "#42b45b",
        },
        "warning": String {
          "0": "#",
          "1": "f",
          "2": "f",
          "3": "9",
          "4": "9",
          "5": "2",
          "6": "6",
          "dark": "#ff8800",
          "light": "#ffa726",
        },
      }
    }
  >
    <Portal
      containerInfo={
        <body>
          <div
            class="sc-jKJlTe hfznNG"
          />
          <div
            class="sc-eNQAEJ cIkDah"
          >
            <div
              aria-hidden="true"
              aria-modal="true"
              class="sc-hMqMXs hSZYPX"
              role="dialog"
              tabindex="-1"
            >
              <div
                class="sc-kEYyzF dLpblE"
              >
                <div>
                  <p
                    id="content"
                  >
                    I am the body
                  </p>
                </div>
              </div>
              <div
                class="sc-kkGfuU juxXhN"
              >
                <button
                  class="sc-gqjmRU bMmQyl"
                  type="primary"
                >
                  <div
                    class="sc-dnqmqq jEdkgN"
                  >
                    <label
                      class="sc-gZMcBi giNnHm"
                    >
                      Close
                    </label>
                  </div>
                </button>
                <button
                  class="sc-gqjmRU jeVYCK"
                  disabled=""
                  type="primary"
                >
                  <div
                    class="sc-dnqmqq jEdkgN"
                  >
                    <label
                      class="sc-gZMcBi giNnHm"
                    >
                      action
                    </label>
                  </div>
                </button>
              </div>
            </div>
          </div>
        </body>
      }
    >
      <styled.div>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-jKJlTe",
                "isStatic": false,
                "lastClassName": "hfznNG",
                "rules": Array [
                  "
    position: fixed;
    top: 0;
    left: 0;
    z-index: 100;
    width: 100vw;
    height: 100vh;
    background-color: #000;
    opacity: 0.5;
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-jKJlTe",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <div
            className="sc-jKJlTe hfznNG"
          />
        </StyledComponent>
      </styled.div>
      <styled.div>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-eNQAEJ",
                "isStatic": false,
                "lastClassName": "cIkDah",
                "rules": Array [
                  "
    position: fixed;
    top: 0;
    left: 0;
    z-index: 101;
    width: 100%;
    height: 100%;
    overflow-x: hidden;
    overflow-y: auto;
    outline: 0;
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-eNQAEJ",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <div
            className="sc-eNQAEJ cIkDah"
          >
            <styled.div
              aria-hidden={true}
              aria-modal={true}
              role="dialog"
              tabIndex={-1}
            >
              <StyledComponent
                aria-hidden={true}
                aria-modal={true}
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-hMqMXs",
                      "isStatic": false,
                      "lastClassName": "hSZYPX",
                      "rules": Array [
                        "
    z-index: 100;
    background: white;
    margin: 0;
    position: absolute;
    padding: 10px 20px;
    min-width: 300px;
    min-height: 150px;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    border-radius: 3px;
    display: flex;
    flex-direction: column;
",
                      ],
                    },
                    "displayName": "styled.div",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-hMqMXs",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                role="dialog"
                tabIndex={-1}
              >
                <div
                  aria-hidden={true}
                  aria-modal={true}
                  className="sc-hMqMXs hSZYPX"
                  role="dialog"
                  tabIndex={-1}
                >
                  <styled.div>
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-kEYyzF",
                            "isStatic": false,
                            "lastClassName": "dLpblE",
                            "rules": Array [
                              "
    max-height: 70vh;
    overflow: scroll;
    height: 100%;
    margin-bottom: 1rem;
",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-kEYyzF",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <div
                        className="sc-kEYyzF dLpblE"
                      >
                        <div>
                          <p
                            id="content"
                          >
                            I am the body
                          </p>
                        </div>
                      </div>
                    </StyledComponent>
                  </styled.div>
                  <styled.div>
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-kkGfuU",
                            "isStatic": false,
                            "lastClassName": "juxXhN",
                            "rules": Array [
                              "
    margin-top: auto;
    display: flex;
    justify-content: center;
",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-kkGfuU",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <div
                        className="sc-kkGfuU juxXhN"
                      >
                        <WithTheme(Button)
                          label="Close"
                          onClick={[Function]}
                          outline={true}
                        >
                          <Button
                            disabled={false}
                            label="Close"
                            onClick={[Function]}
                            outline={true}
                            size="large"
                            text={false}
                            theme={
                              Object {
                                "error": String {
                                  "0": "#",
                                  "1": "d",
                                  "2": "3",
                                  "3": "2",
                                  "4": "f",
                                  "5": "2",
                                  "6": "f",
                                  "dark": "#9e0707",
                                  "light": "#e54242",
                                },
                                "grey": String {
                                  "0": "#",
                                  "1": "7",
                                  "2": "3",
                                  "3": "7",
                                  "4": "3",
                                  "5": "7",
                                  "6": "3",
                                  "dark": "#202020",
                                  "light": "#838383",
                                },
                                "primary": String {
                                  "0": "#",
                                  "1": "5",
                                  "2": "7",
                                  "3": "0",
                                  "4": "7",
                                  "5": "e",
                                  "6": "b",
                                  "dark": "#4a0072",
                                  "light": "#6217ed",
                                },
                                "success": String {
                                  "0": "#",
                                  "1": "3",
                                  "2": "0",
                                  "3": "a",
                                  "4": "6",
                                  "5": "4",
                                  "6": "a",
                                  "dark": " #178b30",
                                  "light": "#42b45b",
                                },
                                "warning": String {
                                  "0": "#",
                                  "1": "f",
                                  "2": "f",
                                  "3": "9",
                                  "4": "9",
                                  "5": "2",
                                  "6": "6",
                                  "dark": "#ff8800",
                                  "light": "#ffa726",
                                },
                              }
                            }
                            type="primary"
                          >
                            <styled.button
                              disabled={false}
                              isLoading={false}
                              onClick={[Function]}
                              outline={true}
                              size="large"
                              text={false}
                              theme={
                                Object {
                                  "error": String {
                                    "0": "#",
                                    "1": "d",
                                    "2": "3",
                                    "3": "2",
                                    "4": "f",
                                    "5": "2",
                                    "6": "f",
                                    "dark": "#9e0707",
                                    "light": "#e54242",
                                  },
                                  "grey": String {
                                    "0": "#",
                                    "1": "7",
                                    "2": "3",
                                    "3": "7",
                                    "4": "3",
                                    "5": "7",
                                    "6": "3",
                                    "dark": "#202020",
                                    "light": "#838383",
                                  },
                                  "primary": String {
                                    "0": "#",
                                    "1": "5",
                                    "2": "7",
                                    "3": "0",
                                    "4": "7",
                                    "5": "e",
                                    "6": "b",
                                    "dark": "#4a0072",
                                    "light": "#6217ed",
                                  },
                                  "success": String {
                                    "0": "#",
                                    "1": "3",
                                    "2": "0",
                                    "3": "a",
                                    "4": "6",
                                    "5": "4",
                                    "6": "a",
                                    "dark": " #178b30",
                                    "light": "#42b45b",
                                  },
                                  "warning": String {
                                    "0": "#",
                                    "1": "f",
                                    "2": "f",
                                    "3": "9",
                                    "4": "9",
                                    "5": "2",
                                    "6": "6",
                                    "dark": "#ff8800",
                                    "light": "#ffa726",
                                  },
                                }
                              }
                              type="primary"
                            >
                              <StyledComponent
                                disabled={false}
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-gqjmRU",
                                      "isStatic": false,
                                      "lastClassName": "jeVYCK",
                                      "rules": Array [
                                        "
    border-radius: 4px;
    height: 40px;
    margin: 5px;
    width: ",
                                        [Function],
                                        ";
    max-width: 225px;
    text-transform: uppercase;
    font-size: 14px;

    letter-spacing: 0.12em;
    border-color: transparent;
    transition: all 0.2s;

    ",
                                        ".sc-gZMcBi",
                                        " {
        &:hover {
            cursor: ",
                                        [Function],
                                        ";
        }
    }

    ",
                                        [Function],
                                        ";
",
                                      ],
                                    },
                                    "displayName": "styled.button",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-gqjmRU",
                                    "target": "button",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                isLoading={false}
                                onClick={[Function]}
                                outline={true}
                                size="large"
                                text={false}
                                theme={
                                  Object {
                                    "error": String {
                                      "0": "#",
                                      "1": "d",
                                      "2": "3",
                                      "3": "2",
                                      "4": "f",
                                      "5": "2",
                                      "6": "f",
                                      "dark": "#9e0707",
                                      "light": "#e54242",
                                    },
                                    "grey": String {
                                      "0": "#",
                                      "1": "7",
                                      "2": "3",
                                      "3": "7",
                                      "4": "3",
                                      "5": "7",
                                      "6": "3",
                                      "dark": "#202020",
                                      "light": "#838383",
                                    },
                                    "primary": String {
                                      "0": "#",
                                      "1": "5",
                                      "2": "7",
                                      "3": "0",
                                      "4": "7",
                                      "5": "e",
                                      "6": "b",
                                      "dark": "#4a0072",
                                      "light": "#6217ed",
                                    },
                                    "success": String {
                                      "0": "#",
                                      "1": "3",
                                      "2": "0",
                                      "3": "a",
                                      "4": "6",
                                      "5": "4",
                                      "6": "a",
                                      "dark": " #178b30",
                                      "light": "#42b45b",
                                    },
                                    "warning": String {
                                      "0": "#",
                                      "1": "f",
                                      "2": "f",
                                      "3": "9",
                                      "4": "9",
                                      "5": "2",
                                      "6": "6",
                                      "dark": "#ff8800",
                                      "light": "#ffa726",
                                    },
                                  }
                                }
                                type="primary"
                              >
                                <button
                                  className="sc-gqjmRU bMmQyl"
                                  disabled={false}
                                  onClick={[Function]}
                                  size="large"
                                  type="primary"
                                >
                                  <styled.div>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-dnqmqq",
                                            "isStatic": false,
                                            "lastClassName": "jEdkgN",
                                            "rules": Array [
                                              "
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: transparent;

    user-select: none;
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-dnqmqq",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="sc-dnqmqq jEdkgN"
                                      >
                                        <styled.label>
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-gZMcBi",
                                                  "isStatic": false,
                                                  "lastClassName": "giNnHm",
                                                  "rules": Array [],
                                                },
                                                "displayName": "styled.label",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-gZMcBi",
                                                "target": "label",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <label
                                              className="sc-gZMcBi giNnHm"
                                            >
                                              Close
                                            </label>
                                          </StyledComponent>
                                        </styled.label>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                </button>
                              </StyledComponent>
                            </styled.button>
                          </Button>
                        </WithTheme(Button)>
                        <WithTheme(Button)
                          disabled={true}
                          label="action"
                          onClick={[Function]}
                        >
                          <Button
                            disabled={true}
                            label="action"
                            onClick={[Function]}
                            outline={false}
                            size="large"
                            text={false}
                            theme={
                              Object {
                                "error": String {
                                  "0": "#",
                                  "1": "d",
                                  "2": "3",
                                  "3": "2",
                                  "4": "f",
                                  "5": "2",
                                  "6": "f",
                                  "dark": "#9e0707",
                                  "light": "#e54242",
                                },
                                "grey": String {
                                  "0": "#",
                                  "1": "7",
                                  "2": "3",
                                  "3": "7",
                                  "4": "3",
                                  "5": "7",
                                  "6": "3",
                                  "dark": "#202020",
                                  "light": "#838383",
                                },
                                "primary": String {
                                  "0": "#",
                                  "1": "5",
                                  "2": "7",
                                  "3": "0",
                                  "4": "7",
                                  "5": "e",
                                  "6": "b",
                                  "dark": "#4a0072",
                                  "light": "#6217ed",
                                },
                                "success": String {
                                  "0": "#",
                                  "1": "3",
                                  "2": "0",
                                  "3": "a",
                                  "4": "6",
                                  "5": "4",
                                  "6": "a",
                                  "dark": " #178b30",
                                  "light": "#42b45b",
                                },
                                "warning": String {
                                  "0": "#",
                                  "1": "f",
                                  "2": "f",
                                  "3": "9",
                                  "4": "9",
                                  "5": "2",
                                  "6": "6",
                                  "dark": "#ff8800",
                                  "light": "#ffa726",
                                },
                              }
                            }
                            type="primary"
                          >
                            <styled.button
                              disabled={true}
                              isLoading={false}
                              onClick={[Function]}
                              outline={false}
                              size="large"
                              text={false}
                              theme={
                                Object {
                                  "error": String {
                                    "0": "#",
                                    "1": "d",
                                    "2": "3",
                                    "3": "2",
                                    "4": "f",
                                    "5": "2",
                                    "6": "f",
                                    "dark": "#9e0707",
                                    "light": "#e54242",
                                  },
                                  "grey": String {
                                    "0": "#",
                                    "1": "7",
                                    "2": "3",
                                    "3": "7",
                                    "4": "3",
                                    "5": "7",
                                    "6": "3",
                                    "dark": "#202020",
                                    "light": "#838383",
                                  },
                                  "primary": String {
                                    "0": "#",
                                    "1": "5",
                                    "2": "7",
                                    "3": "0",
                                    "4": "7",
                                    "5": "e",
                                    "6": "b",
                                    "dark": "#4a0072",
                                    "light": "#6217ed",
                                  },
                                  "success": String {
                                    "0": "#",
                                    "1": "3",
                                    "2": "0",
                                    "3": "a",
                                    "4": "6",
                                    "5": "4",
                                    "6": "a",
                                    "dark": " #178b30",
                                    "light": "#42b45b",
                                  },
                                  "warning": String {
                                    "0": "#",
                                    "1": "f",
                                    "2": "f",
                                    "3": "9",
                                    "4": "9",
                                    "5": "2",
                                    "6": "6",
                                    "dark": "#ff8800",
                                    "light": "#ffa726",
                                  },
                                }
                              }
                              type="primary"
                            >
                              <StyledComponent
                                disabled={true}
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-gqjmRU",
                                      "isStatic": false,
                                      "lastClassName": "jeVYCK",
                                      "rules": Array [
                                        "
    border-radius: 4px;
    height: 40px;
    margin: 5px;
    width: ",
                                        [Function],
                                        ";
    max-width: 225px;
    text-transform: uppercase;
    font-size: 14px;

    letter-spacing: 0.12em;
    border-color: transparent;
    transition: all 0.2s;

    ",
                                        ".sc-gZMcBi",
                                        " {
        &:hover {
            cursor: ",
                                        [Function],
                                        ";
        }
    }

    ",
                                        [Function],
                                        ";
",
                                      ],
                                    },
                                    "displayName": "styled.button",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-gqjmRU",
                                    "target": "button",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                isLoading={false}
                                onClick={[Function]}
                                outline={false}
                                size="large"
                                text={false}
                                theme={
                                  Object {
                                    "error": String {
                                      "0": "#",
                                      "1": "d",
                                      "2": "3",
                                      "3": "2",
                                      "4": "f",
                                      "5": "2",
                                      "6": "f",
                                      "dark": "#9e0707",
                                      "light": "#e54242",
                                    },
                                    "grey": String {
                                      "0": "#",
                                      "1": "7",
                                      "2": "3",
                                      "3": "7",
                                      "4": "3",
                                      "5": "7",
                                      "6": "3",
                                      "dark": "#202020",
                                      "light": "#838383",
                                    },
                                    "primary": String {
                                      "0": "#",
                                      "1": "5",
                                      "2": "7",
                                      "3": "0",
                                      "4": "7",
                                      "5": "e",
                                      "6": "b",
                                      "dark": "#4a0072",
                                      "light": "#6217ed",
                                    },
                                    "success": String {
                                      "0": "#",
                                      "1": "3",
                                      "2": "0",
                                      "3": "a",
                                      "4": "6",
                                      "5": "4",
                                      "6": "a",
                                      "dark": " #178b30",
                                      "light": "#42b45b",
                                    },
                                    "warning": String {
                                      "0": "#",
                                      "1": "f",
                                      "2": "f",
                                      "3": "9",
                                      "4": "9",
                                      "5": "2",
                                      "6": "6",
                                      "dark": "#ff8800",
                                      "light": "#ffa726",
                                    },
                                  }
                                }
                                type="primary"
                              >
                                <button
                                  className="sc-gqjmRU jeVYCK"
                                  disabled={true}
                                  onClick={[Function]}
                                  size="large"
                                  type="primary"
                                >
                                  <styled.div>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-dnqmqq",
                                            "isStatic": false,
                                            "lastClassName": "jEdkgN",
                                            "rules": Array [
                                              "
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: transparent;

    user-select: none;
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-dnqmqq",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="sc-dnqmqq jEdkgN"
                                      >
                                        <styled.label>
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-gZMcBi",
                                                  "isStatic": false,
                                                  "lastClassName": "giNnHm",
                                                  "rules": Array [],
                                                },
                                                "displayName": "styled.label",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-gZMcBi",
                                                "target": "label",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <label
                                              className="sc-gZMcBi giNnHm"
                                            >
                                              action
                                            </label>
                                          </StyledComponent>
                                        </styled.label>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                </button>
                              </StyledComponent>
                            </styled.button>
                          </Button>
                        </WithTheme(Button)>
                      </div>
                    </StyledComponent>
                  </styled.div>
                </div>
              </StyledComponent>
            </styled.div>
          </div>
        </StyledComponent>
      </styled.div>
    </Portal>
  </Dialog>
</WithTheme(Dialog)>
`;

exports[`Dialog rendering should match the snapshot of warning buttons 1`] = `
<WithTheme(Dialog)
  buttonType="warning"
  cancelButton={
    Object {
      "onClick": [MockFunction],
    }
  }
  primaryButton={
    Object {
      "label": "action",
    }
  }
  renderBody={[Function]}
  show={true}
>
  <Dialog
    buttonType="warning"
    cancelButton={
      Object {
        "onClick": [MockFunction],
      }
    }
    primaryButton={
      Object {
        "label": "action",
      }
    }
    renderBody={[Function]}
    show={true}
    theme={
      Object {
        "error": String {
          "0": "#",
          "1": "d",
          "2": "3",
          "3": "2",
          "4": "f",
          "5": "2",
          "6": "f",
          "dark": "#9e0707",
          "light": "#e54242",
        },
        "grey": String {
          "0": "#",
          "1": "7",
          "2": "3",
          "3": "7",
          "4": "3",
          "5": "7",
          "6": "3",
          "dark": "#202020",
          "light": "#838383",
        },
        "primary": String {
          "0": "#",
          "1": "5",
          "2": "7",
          "3": "0",
          "4": "7",
          "5": "e",
          "6": "b",
          "dark": "#4a0072",
          "light": "#6217ed",
        },
        "success": String {
          "0": "#",
          "1": "3",
          "2": "0",
          "3": "a",
          "4": "6",
          "5": "4",
          "6": "a",
          "dark": " #178b30",
          "light": "#42b45b",
        },
        "warning": String {
          "0": "#",
          "1": "f",
          "2": "f",
          "3": "9",
          "4": "9",
          "5": "2",
          "6": "6",
          "dark": "#ff8800",
          "light": "#ffa726",
        },
      }
    }
  >
    <Portal
      containerInfo={
        <body>
          <div
            class="sc-jKJlTe hfznNG"
          />
          <div
            class="sc-eNQAEJ cIkDah"
          >
            <div
              aria-hidden="true"
              aria-modal="true"
              class="sc-hMqMXs hSZYPX"
              role="dialog"
              tabindex="-1"
            >
              <div
                class="sc-kEYyzF dLpblE"
              >
                <div>
                  <p
                    id="content"
                  >
                    I am the body
                  </p>
                </div>
              </div>
              <div
                class="sc-kkGfuU juxXhN"
              >
                <button
                  class="sc-gqjmRU ettEpZ"
                  type="warning"
                >
                  <div
                    class="sc-dnqmqq jEdkgN"
                  >
                    <label
                      class="sc-gZMcBi giNnHm"
                    >
                      Close
                    </label>
                  </div>
                </button>
                <button
                  class="sc-gqjmRU hdZnEr"
                  type="warning"
                >
                  <div
                    class="sc-dnqmqq jEdkgN"
                  >
                    <label
                      class="sc-gZMcBi giNnHm"
                    >
                      action
                    </label>
                  </div>
                </button>
              </div>
            </div>
          </div>
        </body>
      }
    >
      <styled.div>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-jKJlTe",
                "isStatic": false,
                "lastClassName": "hfznNG",
                "rules": Array [
                  "
    position: fixed;
    top: 0;
    left: 0;
    z-index: 100;
    width: 100vw;
    height: 100vh;
    background-color: #000;
    opacity: 0.5;
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-jKJlTe",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <div
            className="sc-jKJlTe hfznNG"
          />
        </StyledComponent>
      </styled.div>
      <styled.div>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-eNQAEJ",
                "isStatic": false,
                "lastClassName": "cIkDah",
                "rules": Array [
                  "
    position: fixed;
    top: 0;
    left: 0;
    z-index: 101;
    width: 100%;
    height: 100%;
    overflow-x: hidden;
    overflow-y: auto;
    outline: 0;
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-eNQAEJ",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <div
            className="sc-eNQAEJ cIkDah"
          >
            <styled.div
              aria-hidden={true}
              aria-modal={true}
              role="dialog"
              tabIndex={-1}
            >
              <StyledComponent
                aria-hidden={true}
                aria-modal={true}
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-hMqMXs",
                      "isStatic": false,
                      "lastClassName": "hSZYPX",
                      "rules": Array [
                        "
    z-index: 100;
    background: white;
    margin: 0;
    position: absolute;
    padding: 10px 20px;
    min-width: 300px;
    min-height: 150px;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    border-radius: 3px;
    display: flex;
    flex-direction: column;
",
                      ],
                    },
                    "displayName": "styled.div",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-hMqMXs",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                role="dialog"
                tabIndex={-1}
              >
                <div
                  aria-hidden={true}
                  aria-modal={true}
                  className="sc-hMqMXs hSZYPX"
                  role="dialog"
                  tabIndex={-1}
                >
                  <styled.div>
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-kEYyzF",
                            "isStatic": false,
                            "lastClassName": "dLpblE",
                            "rules": Array [
                              "
    max-height: 70vh;
    overflow: scroll;
    height: 100%;
    margin-bottom: 1rem;
",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-kEYyzF",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <div
                        className="sc-kEYyzF dLpblE"
                      >
                        <div>
                          <p
                            id="content"
                          >
                            I am the body
                          </p>
                        </div>
                      </div>
                    </StyledComponent>
                  </styled.div>
                  <styled.div>
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-kkGfuU",
                            "isStatic": false,
                            "lastClassName": "juxXhN",
                            "rules": Array [
                              "
    margin-top: auto;
    display: flex;
    justify-content: center;
",
                            ],
                          },
                          "displayName": "styled.div",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-kkGfuU",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <div
                        className="sc-kkGfuU juxXhN"
                      >
                        <WithTheme(Button)
                          label="Close"
                          onClick={[Function]}
                          outline={true}
                          type="warning"
                        >
                          <Button
                            disabled={false}
                            label="Close"
                            onClick={[Function]}
                            outline={true}
                            size="large"
                            text={false}
                            theme={
                              Object {
                                "error": String {
                                  "0": "#",
                                  "1": "d",
                                  "2": "3",
                                  "3": "2",
                                  "4": "f",
                                  "5": "2",
                                  "6": "f",
                                  "dark": "#9e0707",
                                  "light": "#e54242",
                                },
                                "grey": String {
                                  "0": "#",
                                  "1": "7",
                                  "2": "3",
                                  "3": "7",
                                  "4": "3",
                                  "5": "7",
                                  "6": "3",
                                  "dark": "#202020",
                                  "light": "#838383",
                                },
                                "primary": String {
                                  "0": "#",
                                  "1": "5",
                                  "2": "7",
                                  "3": "0",
                                  "4": "7",
                                  "5": "e",
                                  "6": "b",
                                  "dark": "#4a0072",
                                  "light": "#6217ed",
                                },
                                "success": String {
                                  "0": "#",
                                  "1": "3",
                                  "2": "0",
                                  "3": "a",
                                  "4": "6",
                                  "5": "4",
                                  "6": "a",
                                  "dark": " #178b30",
                                  "light": "#42b45b",
                                },
                                "warning": String {
                                  "0": "#",
                                  "1": "f",
                                  "2": "f",
                                  "3": "9",
                                  "4": "9",
                                  "5": "2",
                                  "6": "6",
                                  "dark": "#ff8800",
                                  "light": "#ffa726",
                                },
                              }
                            }
                            type="warning"
                          >
                            <styled.button
                              disabled={false}
                              isLoading={false}
                              onClick={[Function]}
                              outline={true}
                              size="large"
                              text={false}
                              theme={
                                Object {
                                  "error": String {
                                    "0": "#",
                                    "1": "d",
                                    "2": "3",
                                    "3": "2",
                                    "4": "f",
                                    "5": "2",
                                    "6": "f",
                                    "dark": "#9e0707",
                                    "light": "#e54242",
                                  },
                                  "grey": String {
                                    "0": "#",
                                    "1": "7",
                                    "2": "3",
                                    "3": "7",
                                    "4": "3",
                                    "5": "7",
                                    "6": "3",
                                    "dark": "#202020",
                                    "light": "#838383",
                                  },
                                  "primary": String {
                                    "0": "#",
                                    "1": "5",
                                    "2": "7",
                                    "3": "0",
                                    "4": "7",
                                    "5": "e",
                                    "6": "b",
                                    "dark": "#4a0072",
                                    "light": "#6217ed",
                                  },
                                  "success": String {
                                    "0": "#",
                                    "1": "3",
                                    "2": "0",
                                    "3": "a",
                                    "4": "6",
                                    "5": "4",
                                    "6": "a",
                                    "dark": " #178b30",
                                    "light": "#42b45b",
                                  },
                                  "warning": String {
                                    "0": "#",
                                    "1": "f",
                                    "2": "f",
                                    "3": "9",
                                    "4": "9",
                                    "5": "2",
                                    "6": "6",
                                    "dark": "#ff8800",
                                    "light": "#ffa726",
                                  },
                                }
                              }
                              type="warning"
                            >
                              <StyledComponent
                                disabled={false}
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-gqjmRU",
                                      "isStatic": false,
                                      "lastClassName": "hdZnEr",
                                      "rules": Array [
                                        "
    border-radius: 4px;
    height: 40px;
    margin: 5px;
    width: ",
                                        [Function],
                                        ";
    max-width: 225px;
    text-transform: uppercase;
    font-size: 14px;

    letter-spacing: 0.12em;
    border-color: transparent;
    transition: all 0.2s;

    ",
                                        ".sc-gZMcBi",
                                        " {
        &:hover {
            cursor: ",
                                        [Function],
                                        ";
        }
    }

    ",
                                        [Function],
                                        ";
",
                                      ],
                                    },
                                    "displayName": "styled.button",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-gqjmRU",
                                    "target": "button",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                isLoading={false}
                                onClick={[Function]}
                                outline={true}
                                size="large"
                                text={false}
                                theme={
                                  Object {
                                    "error": String {
                                      "0": "#",
                                      "1": "d",
                                      "2": "3",
                                      "3": "2",
                                      "4": "f",
                                      "5": "2",
                                      "6": "f",
                                      "dark": "#9e0707",
                                      "light": "#e54242",
                                    },
                                    "grey": String {
                                      "0": "#",
                                      "1": "7",
                                      "2": "3",
                                      "3": "7",
                                      "4": "3",
                                      "5": "7",
                                      "6": "3",
                                      "dark": "#202020",
                                      "light": "#838383",
                                    },
                                    "primary": String {
                                      "0": "#",
                                      "1": "5",
                                      "2": "7",
                                      "3": "0",
                                      "4": "7",
                                      "5": "e",
                                      "6": "b",
                                      "dark": "#4a0072",
                                      "light": "#6217ed",
                                    },
                                    "success": String {
                                      "0": "#",
                                      "1": "3",
                                      "2": "0",
                                      "3": "a",
                                      "4": "6",
                                      "5": "4",
                                      "6": "a",
                                      "dark": " #178b30",
                                      "light": "#42b45b",
                                    },
                                    "warning": String {
                                      "0": "#",
                                      "1": "f",
                                      "2": "f",
                                      "3": "9",
                                      "4": "9",
                                      "5": "2",
                                      "6": "6",
                                      "dark": "#ff8800",
                                      "light": "#ffa726",
                                    },
                                  }
                                }
                                type="warning"
                              >
                                <button
                                  className="sc-gqjmRU ettEpZ"
                                  disabled={false}
                                  onClick={[Function]}
                                  size="large"
                                  type="warning"
                                >
                                  <styled.div>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-dnqmqq",
                                            "isStatic": false,
                                            "lastClassName": "jEdkgN",
                                            "rules": Array [
                                              "
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: transparent;

    user-select: none;
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-dnqmqq",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="sc-dnqmqq jEdkgN"
                                      >
                                        <styled.label>
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-gZMcBi",
                                                  "isStatic": false,
                                                  "lastClassName": "giNnHm",
                                                  "rules": Array [],
                                                },
                                                "displayName": "styled.label",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-gZMcBi",
                                                "target": "label",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <label
                                              className="sc-gZMcBi giNnHm"
                                            >
                                              Close
                                            </label>
                                          </StyledComponent>
                                        </styled.label>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                </button>
                              </StyledComponent>
                            </styled.button>
                          </Button>
                        </WithTheme(Button)>
                        <WithTheme(Button)
                          label="action"
                          onClick={[Function]}
                          type="warning"
                        >
                          <Button
                            disabled={false}
                            label="action"
                            onClick={[Function]}
                            outline={false}
                            size="large"
                            text={false}
                            theme={
                              Object {
                                "error": String {
                                  "0": "#",
                                  "1": "d",
                                  "2": "3",
                                  "3": "2",
                                  "4": "f",
                                  "5": "2",
                                  "6": "f",
                                  "dark": "#9e0707",
                                  "light": "#e54242",
                                },
                                "grey": String {
                                  "0": "#",
                                  "1": "7",
                                  "2": "3",
                                  "3": "7",
                                  "4": "3",
                                  "5": "7",
                                  "6": "3",
                                  "dark": "#202020",
                                  "light": "#838383",
                                },
                                "primary": String {
                                  "0": "#",
                                  "1": "5",
                                  "2": "7",
                                  "3": "0",
                                  "4": "7",
                                  "5": "e",
                                  "6": "b",
                                  "dark": "#4a0072",
                                  "light": "#6217ed",
                                },
                                "success": String {
                                  "0": "#",
                                  "1": "3",
                                  "2": "0",
                                  "3": "a",
                                  "4": "6",
                                  "5": "4",
                                  "6": "a",
                                  "dark": " #178b30",
                                  "light": "#42b45b",
                                },
                                "warning": String {
                                  "0": "#",
                                  "1": "f",
                                  "2": "f",
                                  "3": "9",
                                  "4": "9",
                                  "5": "2",
                                  "6": "6",
                                  "dark": "#ff8800",
                                  "light": "#ffa726",
                                },
                              }
                            }
                            type="warning"
                          >
                            <styled.button
                              disabled={false}
                              isLoading={false}
                              onClick={[Function]}
                              outline={false}
                              size="large"
                              text={false}
                              theme={
                                Object {
                                  "error": String {
                                    "0": "#",
                                    "1": "d",
                                    "2": "3",
                                    "3": "2",
                                    "4": "f",
                                    "5": "2",
                                    "6": "f",
                                    "dark": "#9e0707",
                                    "light": "#e54242",
                                  },
                                  "grey": String {
                                    "0": "#",
                                    "1": "7",
                                    "2": "3",
                                    "3": "7",
                                    "4": "3",
                                    "5": "7",
                                    "6": "3",
                                    "dark": "#202020",
                                    "light": "#838383",
                                  },
                                  "primary": String {
                                    "0": "#",
                                    "1": "5",
                                    "2": "7",
                                    "3": "0",
                                    "4": "7",
                                    "5": "e",
                                    "6": "b",
                                    "dark": "#4a0072",
                                    "light": "#6217ed",
                                  },
                                  "success": String {
                                    "0": "#",
                                    "1": "3",
                                    "2": "0",
                                    "3": "a",
                                    "4": "6",
                                    "5": "4",
                                    "6": "a",
                                    "dark": " #178b30",
                                    "light": "#42b45b",
                                  },
                                  "warning": String {
                                    "0": "#",
                                    "1": "f",
                                    "2": "f",
                                    "3": "9",
                                    "4": "9",
                                    "5": "2",
                                    "6": "6",
                                    "dark": "#ff8800",
                                    "light": "#ffa726",
                                  },
                                }
                              }
                              type="warning"
                            >
                              <StyledComponent
                                disabled={false}
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-gqjmRU",
                                      "isStatic": false,
                                      "lastClassName": "hdZnEr",
                                      "rules": Array [
                                        "
    border-radius: 4px;
    height: 40px;
    margin: 5px;
    width: ",
                                        [Function],
                                        ";
    max-width: 225px;
    text-transform: uppercase;
    font-size: 14px;

    letter-spacing: 0.12em;
    border-color: transparent;
    transition: all 0.2s;

    ",
                                        ".sc-gZMcBi",
                                        " {
        &:hover {
            cursor: ",
                                        [Function],
                                        ";
        }
    }

    ",
                                        [Function],
                                        ";
",
                                      ],
                                    },
                                    "displayName": "styled.button",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-gqjmRU",
                                    "target": "button",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                isLoading={false}
                                onClick={[Function]}
                                outline={false}
                                size="large"
                                text={false}
                                theme={
                                  Object {
                                    "error": String {
                                      "0": "#",
                                      "1": "d",
                                      "2": "3",
                                      "3": "2",
                                      "4": "f",
                                      "5": "2",
                                      "6": "f",
                                      "dark": "#9e0707",
                                      "light": "#e54242",
                                    },
                                    "grey": String {
                                      "0": "#",
                                      "1": "7",
                                      "2": "3",
                                      "3": "7",
                                      "4": "3",
                                      "5": "7",
                                      "6": "3",
                                      "dark": "#202020",
                                      "light": "#838383",
                                    },
                                    "primary": String {
                                      "0": "#",
                                      "1": "5",
                                      "2": "7",
                                      "3": "0",
                                      "4": "7",
                                      "5": "e",
                                      "6": "b",
                                      "dark": "#4a0072",
                                      "light": "#6217ed",
                                    },
                                    "success": String {
                                      "0": "#",
                                      "1": "3",
                                      "2": "0",
                                      "3": "a",
                                      "4": "6",
                                      "5": "4",
                                      "6": "a",
                                      "dark": " #178b30",
                                      "light": "#42b45b",
                                    },
                                    "warning": String {
                                      "0": "#",
                                      "1": "f",
                                      "2": "f",
                                      "3": "9",
                                      "4": "9",
                                      "5": "2",
                                      "6": "6",
                                      "dark": "#ff8800",
                                      "light": "#ffa726",
                                    },
                                  }
                                }
                                type="warning"
                              >
                                <button
                                  className="sc-gqjmRU hdZnEr"
                                  disabled={false}
                                  onClick={[Function]}
                                  size="large"
                                  type="warning"
                                >
                                  <styled.div>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-dnqmqq",
                                            "isStatic": false,
                                            "lastClassName": "jEdkgN",
                                            "rules": Array [
                                              "
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: transparent;

    user-select: none;
",
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-dnqmqq",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="sc-dnqmqq jEdkgN"
                                      >
                                        <styled.label>
                                          <StyledComponent
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-gZMcBi",
                                                  "isStatic": false,
                                                  "lastClassName": "giNnHm",
                                                  "rules": Array [],
                                                },
                                                "displayName": "styled.label",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-gZMcBi",
                                                "target": "label",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <label
                                              className="sc-gZMcBi giNnHm"
                                            >
                                              action
                                            </label>
                                          </StyledComponent>
                                        </styled.label>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                </button>
                              </StyledComponent>
                            </styled.button>
                          </Button>
                        </WithTheme(Button)>
                      </div>
                    </StyledComponent>
                  </styled.div>
                </div>
              </StyledComponent>
            </styled.div>
          </div>
        </StyledComponent>
      </styled.div>
    </Portal>
  </Dialog>
</WithTheme(Dialog)>
`;
