// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Input rendering should match the default snapshot 1`] = `
<Input
  disabled={false}
  theme={
    Object {
      "error": String {
        "0": "#",
        "1": "d",
        "2": "3",
        "3": "2",
        "4": "f",
        "5": "2",
        "6": "f",
        "dark": "#9e0707",
        "light": "#e54242",
      },
      "grey": String {
        "0": "#",
        "1": "7",
        "2": "3",
        "3": "7",
        "4": "3",
        "5": "7",
        "6": "3",
        "dark": "#202020",
        "light": "#838383",
      },
      "primary": String {
        "0": "#",
        "1": "5",
        "2": "7",
        "3": "0",
        "4": "7",
        "5": "e",
        "6": "b",
        "dark": "#4a0072",
        "light": "#6217ed",
      },
      "success": String {
        "0": "#",
        "1": "3",
        "2": "0",
        "3": "a",
        "4": "6",
        "5": "4",
        "6": "a",
        "dark": " #178b30",
        "light": "#42b45b",
      },
      "warning": String {
        "0": "#",
        "1": "f",
        "2": "f",
        "3": "9",
        "4": "9",
        "5": "2",
        "6": "6",
        "dark": "#ff8800",
        "light": "#ffa726",
      },
    }
  }
  type="text"
>
  <styled.div
    data-testid="container"
    disabled={false}
    focused={false}
    onClick={[Function]}
    theme={
      Object {
        "error": String {
          "0": "#",
          "1": "d",
          "2": "3",
          "3": "2",
          "4": "f",
          "5": "2",
          "6": "f",
          "dark": "#9e0707",
          "light": "#e54242",
        },
        "grey": String {
          "0": "#",
          "1": "7",
          "2": "3",
          "3": "7",
          "4": "3",
          "5": "7",
          "6": "3",
          "dark": "#202020",
          "light": "#838383",
        },
        "primary": String {
          "0": "#",
          "1": "5",
          "2": "7",
          "3": "0",
          "4": "7",
          "5": "e",
          "6": "b",
          "dark": "#4a0072",
          "light": "#6217ed",
        },
        "success": String {
          "0": "#",
          "1": "3",
          "2": "0",
          "3": "a",
          "4": "6",
          "5": "4",
          "6": "a",
          "dark": " #178b30",
          "light": "#42b45b",
        },
        "warning": String {
          "0": "#",
          "1": "f",
          "2": "f",
          "3": "9",
          "4": "9",
          "5": "2",
          "6": "6",
          "dark": "#ff8800",
          "light": "#ffa726",
        },
      }
    }
  >
    <StyledComponent
      data-testid="container"
      disabled={false}
      focused={false}
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bxivhb",
            "isStatic": false,
            "lastClassName": "ghUEoY",
            "rules": Array [
              "
    position: relative;
    display: flex;

    margin: 10px 10px 30px 10px;
    border: solid 1px rgb(117, 117, 117);
    border-radius: 4px;
    box-sizing: border-box;
    height: 44px;
    padding: 4px 8px;
    align-items: center;
    background-color: inherit;
    &:hover {
        cursor: text;
    }
    ",
              [Function],
              "
    ",
              [Function],
              ";
    ",
              [Function],
              ";
    ",
              [Function],
              ";
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bxivhb",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={
        Object {
          "current": <div
            class="sc-bxivhb ghUEoY"
            data-testid="container"
          >
            <input
              autocomplete="none"
              class="sc-bZQynM dqTFug"
              type="text"
              value=""
            />
            <span
              class="sc-ifAKCX iwTHmR"
            />
            <span
              class="sc-EHOje iMxrDv"
            />
          </div>,
        }
      }
      onClick={[Function]}
      theme={
        Object {
          "error": String {
            "0": "#",
            "1": "d",
            "2": "3",
            "3": "2",
            "4": "f",
            "5": "2",
            "6": "f",
            "dark": "#9e0707",
            "light": "#e54242",
          },
          "grey": String {
            "0": "#",
            "1": "7",
            "2": "3",
            "3": "7",
            "4": "3",
            "5": "7",
            "6": "3",
            "dark": "#202020",
            "light": "#838383",
          },
          "primary": String {
            "0": "#",
            "1": "5",
            "2": "7",
            "3": "0",
            "4": "7",
            "5": "e",
            "6": "b",
            "dark": "#4a0072",
            "light": "#6217ed",
          },
          "success": String {
            "0": "#",
            "1": "3",
            "2": "0",
            "3": "a",
            "4": "6",
            "5": "4",
            "6": "a",
            "dark": " #178b30",
            "light": "#42b45b",
          },
          "warning": String {
            "0": "#",
            "1": "f",
            "2": "f",
            "3": "9",
            "4": "9",
            "5": "2",
            "6": "6",
            "dark": "#ff8800",
            "light": "#ffa726",
          },
        }
      }
    >
      <div
        className="sc-bxivhb ghUEoY"
        data-testid="container"
        disabled={false}
        onClick={[Function]}
      >
        <styled.input
          autoComplete="none"
          disabled={false}
          onChange={[Function]}
          onFocus={[Function]}
          theme={
            Object {
              "error": String {
                "0": "#",
                "1": "d",
                "2": "3",
                "3": "2",
                "4": "f",
                "5": "2",
                "6": "f",
                "dark": "#9e0707",
                "light": "#e54242",
              },
              "grey": String {
                "0": "#",
                "1": "7",
                "2": "3",
                "3": "7",
                "4": "3",
                "5": "7",
                "6": "3",
                "dark": "#202020",
                "light": "#838383",
              },
              "primary": String {
                "0": "#",
                "1": "5",
                "2": "7",
                "3": "0",
                "4": "7",
                "5": "e",
                "6": "b",
                "dark": "#4a0072",
                "light": "#6217ed",
              },
              "success": String {
                "0": "#",
                "1": "3",
                "2": "0",
                "3": "a",
                "4": "6",
                "5": "4",
                "6": "a",
                "dark": " #178b30",
                "light": "#42b45b",
              },
              "warning": String {
                "0": "#",
                "1": "f",
                "2": "f",
                "3": "9",
                "4": "9",
                "5": "2",
                "6": "6",
                "dark": "#ff8800",
                "light": "#ffa726",
              },
            }
          }
          type="text"
        >
          <StyledComponent
            autoComplete="none"
            disabled={false}
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bZQynM",
                  "isStatic": false,
                  "lastClassName": "dqTFug",
                  "rules": Array [
                    "
    position: relative;

    width: 100%;
    border: none;
    cursor: inherit;
    caret-color: ",
                    [Function],
                    ";
    font-size: 14px;
    background-color: transparent;

    &:focus {
        outline: none;
    }
",
                  ],
                },
                "displayName": "styled.input",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bZQynM",
                "target": "input",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={
              Object {
                "current": <input
                  autocomplete="none"
                  class="sc-bZQynM dqTFug"
                  type="text"
                  value=""
                />,
              }
            }
            onChange={[Function]}
            onFocus={[Function]}
            theme={
              Object {
                "error": String {
                  "0": "#",
                  "1": "d",
                  "2": "3",
                  "3": "2",
                  "4": "f",
                  "5": "2",
                  "6": "f",
                  "dark": "#9e0707",
                  "light": "#e54242",
                },
                "grey": String {
                  "0": "#",
                  "1": "7",
                  "2": "3",
                  "3": "7",
                  "4": "3",
                  "5": "7",
                  "6": "3",
                  "dark": "#202020",
                  "light": "#838383",
                },
                "primary": String {
                  "0": "#",
                  "1": "5",
                  "2": "7",
                  "3": "0",
                  "4": "7",
                  "5": "e",
                  "6": "b",
                  "dark": "#4a0072",
                  "light": "#6217ed",
                },
                "success": String {
                  "0": "#",
                  "1": "3",
                  "2": "0",
                  "3": "a",
                  "4": "6",
                  "5": "4",
                  "6": "a",
                  "dark": " #178b30",
                  "light": "#42b45b",
                },
                "warning": String {
                  "0": "#",
                  "1": "f",
                  "2": "f",
                  "3": "9",
                  "4": "9",
                  "5": "2",
                  "6": "6",
                  "dark": "#ff8800",
                  "light": "#ffa726",
                },
              }
            }
            type="text"
          >
            <input
              autoComplete="none"
              className="sc-bZQynM dqTFug"
              disabled={false}
              onChange={[Function]}
              onFocus={[Function]}
              type="text"
            />
          </StyledComponent>
        </styled.input>
        <styled.span>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-ifAKCX",
                  "isStatic": false,
                  "lastClassName": "iwTHmR",
                  "rules": Array [
                    "
    position: absolute;
    visibility: hidden;
    bottom: -20px;
    left: 8px;
    font-size: 14px;
",
                  ],
                },
                "displayName": "styled.span",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-ifAKCX",
                "target": "span",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <span
              className="sc-ifAKCX iwTHmR"
            />
          </StyledComponent>
        </styled.span>
        <styled.span>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-EHOje",
                  "isStatic": false,
                  "lastClassName": "iMxrDv",
                  "rules": Array [
                    "
    position: absolute;
    visibility: hidden;
    bottom: -20px;
    width: 100%;
    font-size: 14px;
    color: rgb(117, 117, 117);
",
                  ],
                },
                "displayName": "styled.span",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-EHOje",
                "target": "span",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <span
              className="sc-EHOje iMxrDv"
            />
          </StyledComponent>
        </styled.span>
      </div>
    </StyledComponent>
  </styled.div>
</Input>
`;

exports[`Input rendering should match the disabled snapshot 1`] = `
<Input
  disabled={true}
  theme={
    Object {
      "error": String {
        "0": "#",
        "1": "d",
        "2": "3",
        "3": "2",
        "4": "f",
        "5": "2",
        "6": "f",
        "dark": "#9e0707",
        "light": "#e54242",
      },
      "grey": String {
        "0": "#",
        "1": "7",
        "2": "3",
        "3": "7",
        "4": "3",
        "5": "7",
        "6": "3",
        "dark": "#202020",
        "light": "#838383",
      },
      "primary": String {
        "0": "#",
        "1": "5",
        "2": "7",
        "3": "0",
        "4": "7",
        "5": "e",
        "6": "b",
        "dark": "#4a0072",
        "light": "#6217ed",
      },
      "success": String {
        "0": "#",
        "1": "3",
        "2": "0",
        "3": "a",
        "4": "6",
        "5": "4",
        "6": "a",
        "dark": " #178b30",
        "light": "#42b45b",
      },
      "warning": String {
        "0": "#",
        "1": "f",
        "2": "f",
        "3": "9",
        "4": "9",
        "5": "2",
        "6": "6",
        "dark": "#ff8800",
        "light": "#ffa726",
      },
    }
  }
  type="text"
>
  <styled.div
    data-testid="container"
    disabled={true}
    focused={false}
    onClick={[Function]}
    theme={
      Object {
        "error": String {
          "0": "#",
          "1": "d",
          "2": "3",
          "3": "2",
          "4": "f",
          "5": "2",
          "6": "f",
          "dark": "#9e0707",
          "light": "#e54242",
        },
        "grey": String {
          "0": "#",
          "1": "7",
          "2": "3",
          "3": "7",
          "4": "3",
          "5": "7",
          "6": "3",
          "dark": "#202020",
          "light": "#838383",
        },
        "primary": String {
          "0": "#",
          "1": "5",
          "2": "7",
          "3": "0",
          "4": "7",
          "5": "e",
          "6": "b",
          "dark": "#4a0072",
          "light": "#6217ed",
        },
        "success": String {
          "0": "#",
          "1": "3",
          "2": "0",
          "3": "a",
          "4": "6",
          "5": "4",
          "6": "a",
          "dark": " #178b30",
          "light": "#42b45b",
        },
        "warning": String {
          "0": "#",
          "1": "f",
          "2": "f",
          "3": "9",
          "4": "9",
          "5": "2",
          "6": "6",
          "dark": "#ff8800",
          "light": "#ffa726",
        },
      }
    }
  >
    <StyledComponent
      data-testid="container"
      disabled={true}
      focused={false}
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bxivhb",
            "isStatic": false,
            "lastClassName": "gdQtfk",
            "rules": Array [
              "
    position: relative;
    display: flex;

    margin: 10px 10px 30px 10px;
    border: solid 1px rgb(117, 117, 117);
    border-radius: 4px;
    box-sizing: border-box;
    height: 44px;
    padding: 4px 8px;
    align-items: center;
    background-color: inherit;
    &:hover {
        cursor: text;
    }
    ",
              [Function],
              "
    ",
              [Function],
              ";
    ",
              [Function],
              ";
    ",
              [Function],
              ";
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bxivhb",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={
        Object {
          "current": <div
            class="sc-bxivhb gdQtfk"
            data-testid="container"
            disabled=""
          >
            <input
              autocomplete="none"
              class="sc-bZQynM dqTFug"
              disabled=""
              type="text"
              value=""
            />
            <span
              class="sc-ifAKCX iwTHmR"
            />
            <span
              class="sc-EHOje iMxrDv"
            />
          </div>,
        }
      }
      onClick={[Function]}
      theme={
        Object {
          "error": String {
            "0": "#",
            "1": "d",
            "2": "3",
            "3": "2",
            "4": "f",
            "5": "2",
            "6": "f",
            "dark": "#9e0707",
            "light": "#e54242",
          },
          "grey": String {
            "0": "#",
            "1": "7",
            "2": "3",
            "3": "7",
            "4": "3",
            "5": "7",
            "6": "3",
            "dark": "#202020",
            "light": "#838383",
          },
          "primary": String {
            "0": "#",
            "1": "5",
            "2": "7",
            "3": "0",
            "4": "7",
            "5": "e",
            "6": "b",
            "dark": "#4a0072",
            "light": "#6217ed",
          },
          "success": String {
            "0": "#",
            "1": "3",
            "2": "0",
            "3": "a",
            "4": "6",
            "5": "4",
            "6": "a",
            "dark": " #178b30",
            "light": "#42b45b",
          },
          "warning": String {
            "0": "#",
            "1": "f",
            "2": "f",
            "3": "9",
            "4": "9",
            "5": "2",
            "6": "6",
            "dark": "#ff8800",
            "light": "#ffa726",
          },
        }
      }
    >
      <div
        className="sc-bxivhb gdQtfk"
        data-testid="container"
        disabled={true}
        onClick={[Function]}
      >
        <styled.input
          autoComplete="none"
          disabled={true}
          onChange={[Function]}
          onFocus={[Function]}
          theme={
            Object {
              "error": String {
                "0": "#",
                "1": "d",
                "2": "3",
                "3": "2",
                "4": "f",
                "5": "2",
                "6": "f",
                "dark": "#9e0707",
                "light": "#e54242",
              },
              "grey": String {
                "0": "#",
                "1": "7",
                "2": "3",
                "3": "7",
                "4": "3",
                "5": "7",
                "6": "3",
                "dark": "#202020",
                "light": "#838383",
              },
              "primary": String {
                "0": "#",
                "1": "5",
                "2": "7",
                "3": "0",
                "4": "7",
                "5": "e",
                "6": "b",
                "dark": "#4a0072",
                "light": "#6217ed",
              },
              "success": String {
                "0": "#",
                "1": "3",
                "2": "0",
                "3": "a",
                "4": "6",
                "5": "4",
                "6": "a",
                "dark": " #178b30",
                "light": "#42b45b",
              },
              "warning": String {
                "0": "#",
                "1": "f",
                "2": "f",
                "3": "9",
                "4": "9",
                "5": "2",
                "6": "6",
                "dark": "#ff8800",
                "light": "#ffa726",
              },
            }
          }
          type="text"
        >
          <StyledComponent
            autoComplete="none"
            disabled={true}
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bZQynM",
                  "isStatic": false,
                  "lastClassName": "dqTFug",
                  "rules": Array [
                    "
    position: relative;

    width: 100%;
    border: none;
    cursor: inherit;
    caret-color: ",
                    [Function],
                    ";
    font-size: 14px;
    background-color: transparent;

    &:focus {
        outline: none;
    }
",
                  ],
                },
                "displayName": "styled.input",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bZQynM",
                "target": "input",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={
              Object {
                "current": <input
                  autocomplete="none"
                  class="sc-bZQynM dqTFug"
                  disabled=""
                  type="text"
                  value=""
                />,
              }
            }
            onChange={[Function]}
            onFocus={[Function]}
            theme={
              Object {
                "error": String {
                  "0": "#",
                  "1": "d",
                  "2": "3",
                  "3": "2",
                  "4": "f",
                  "5": "2",
                  "6": "f",
                  "dark": "#9e0707",
                  "light": "#e54242",
                },
                "grey": String {
                  "0": "#",
                  "1": "7",
                  "2": "3",
                  "3": "7",
                  "4": "3",
                  "5": "7",
                  "6": "3",
                  "dark": "#202020",
                  "light": "#838383",
                },
                "primary": String {
                  "0": "#",
                  "1": "5",
                  "2": "7",
                  "3": "0",
                  "4": "7",
                  "5": "e",
                  "6": "b",
                  "dark": "#4a0072",
                  "light": "#6217ed",
                },
                "success": String {
                  "0": "#",
                  "1": "3",
                  "2": "0",
                  "3": "a",
                  "4": "6",
                  "5": "4",
                  "6": "a",
                  "dark": " #178b30",
                  "light": "#42b45b",
                },
                "warning": String {
                  "0": "#",
                  "1": "f",
                  "2": "f",
                  "3": "9",
                  "4": "9",
                  "5": "2",
                  "6": "6",
                  "dark": "#ff8800",
                  "light": "#ffa726",
                },
              }
            }
            type="text"
          >
            <input
              autoComplete="none"
              className="sc-bZQynM dqTFug"
              disabled={true}
              onChange={[Function]}
              onFocus={[Function]}
              type="text"
            />
          </StyledComponent>
        </styled.input>
        <styled.span>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-ifAKCX",
                  "isStatic": false,
                  "lastClassName": "iwTHmR",
                  "rules": Array [
                    "
    position: absolute;
    visibility: hidden;
    bottom: -20px;
    left: 8px;
    font-size: 14px;
",
                  ],
                },
                "displayName": "styled.span",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-ifAKCX",
                "target": "span",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <span
              className="sc-ifAKCX iwTHmR"
            />
          </StyledComponent>
        </styled.span>
        <styled.span>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-EHOje",
                  "isStatic": false,
                  "lastClassName": "iMxrDv",
                  "rules": Array [
                    "
    position: absolute;
    visibility: hidden;
    bottom: -20px;
    width: 100%;
    font-size: 14px;
    color: rgb(117, 117, 117);
",
                  ],
                },
                "displayName": "styled.span",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-EHOje",
                "target": "span",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <span
              className="sc-EHOje iMxrDv"
            />
          </StyledComponent>
        </styled.span>
      </div>
    </StyledComponent>
  </styled.div>
</Input>
`;

exports[`Input rendering should match the error snapshot 1`] = `
<Input
  disabled={false}
  error="Uh Oh"
  theme={
    Object {
      "error": String {
        "0": "#",
        "1": "d",
        "2": "3",
        "3": "2",
        "4": "f",
        "5": "2",
        "6": "f",
        "dark": "#9e0707",
        "light": "#e54242",
      },
      "grey": String {
        "0": "#",
        "1": "7",
        "2": "3",
        "3": "7",
        "4": "3",
        "5": "7",
        "6": "3",
        "dark": "#202020",
        "light": "#838383",
      },
      "primary": String {
        "0": "#",
        "1": "5",
        "2": "7",
        "3": "0",
        "4": "7",
        "5": "e",
        "6": "b",
        "dark": "#4a0072",
        "light": "#6217ed",
      },
      "success": String {
        "0": "#",
        "1": "3",
        "2": "0",
        "3": "a",
        "4": "6",
        "5": "4",
        "6": "a",
        "dark": " #178b30",
        "light": "#42b45b",
      },
      "warning": String {
        "0": "#",
        "1": "f",
        "2": "f",
        "3": "9",
        "4": "9",
        "5": "2",
        "6": "6",
        "dark": "#ff8800",
        "light": "#ffa726",
      },
    }
  }
  type="text"
>
  <styled.div
    data-testid="container"
    disabled={false}
    error="Uh Oh"
    focused={false}
    onClick={[Function]}
    theme={
      Object {
        "error": String {
          "0": "#",
          "1": "d",
          "2": "3",
          "3": "2",
          "4": "f",
          "5": "2",
          "6": "f",
          "dark": "#9e0707",
          "light": "#e54242",
        },
        "grey": String {
          "0": "#",
          "1": "7",
          "2": "3",
          "3": "7",
          "4": "3",
          "5": "7",
          "6": "3",
          "dark": "#202020",
          "light": "#838383",
        },
        "primary": String {
          "0": "#",
          "1": "5",
          "2": "7",
          "3": "0",
          "4": "7",
          "5": "e",
          "6": "b",
          "dark": "#4a0072",
          "light": "#6217ed",
        },
        "success": String {
          "0": "#",
          "1": "3",
          "2": "0",
          "3": "a",
          "4": "6",
          "5": "4",
          "6": "a",
          "dark": " #178b30",
          "light": "#42b45b",
        },
        "warning": String {
          "0": "#",
          "1": "f",
          "2": "f",
          "3": "9",
          "4": "9",
          "5": "2",
          "6": "6",
          "dark": "#ff8800",
          "light": "#ffa726",
        },
      }
    }
  >
    <StyledComponent
      data-testid="container"
      disabled={false}
      error="Uh Oh"
      focused={false}
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bxivhb",
            "isStatic": false,
            "lastClassName": "dQRRFY",
            "rules": Array [
              "
    position: relative;
    display: flex;

    margin: 10px 10px 30px 10px;
    border: solid 1px rgb(117, 117, 117);
    border-radius: 4px;
    box-sizing: border-box;
    height: 44px;
    padding: 4px 8px;
    align-items: center;
    background-color: inherit;
    &:hover {
        cursor: text;
    }
    ",
              [Function],
              "
    ",
              [Function],
              ";
    ",
              [Function],
              ";
    ",
              [Function],
              ";
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bxivhb",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={
        Object {
          "current": <div
            class="sc-bxivhb dQRRFY"
            data-testid="container"
          >
            <input
              autocomplete="none"
              class="sc-bZQynM dqTFug"
              type="text"
              value=""
            />
            <i
              class="sc-bdVaJa widyX material-icons sc-bwzfXH uCXZx"
            >
              info
            </i>
            <span
              class="sc-ifAKCX iwTHmR"
            >
              Uh Oh
            </span>
            <span
              class="sc-EHOje iMxrDv"
            />
          </div>,
        }
      }
      onClick={[Function]}
      theme={
        Object {
          "error": String {
            "0": "#",
            "1": "d",
            "2": "3",
            "3": "2",
            "4": "f",
            "5": "2",
            "6": "f",
            "dark": "#9e0707",
            "light": "#e54242",
          },
          "grey": String {
            "0": "#",
            "1": "7",
            "2": "3",
            "3": "7",
            "4": "3",
            "5": "7",
            "6": "3",
            "dark": "#202020",
            "light": "#838383",
          },
          "primary": String {
            "0": "#",
            "1": "5",
            "2": "7",
            "3": "0",
            "4": "7",
            "5": "e",
            "6": "b",
            "dark": "#4a0072",
            "light": "#6217ed",
          },
          "success": String {
            "0": "#",
            "1": "3",
            "2": "0",
            "3": "a",
            "4": "6",
            "5": "4",
            "6": "a",
            "dark": " #178b30",
            "light": "#42b45b",
          },
          "warning": String {
            "0": "#",
            "1": "f",
            "2": "f",
            "3": "9",
            "4": "9",
            "5": "2",
            "6": "6",
            "dark": "#ff8800",
            "light": "#ffa726",
          },
        }
      }
    >
      <div
        className="sc-bxivhb dQRRFY"
        data-testid="container"
        disabled={false}
        onClick={[Function]}
      >
        <styled.input
          autoComplete="none"
          disabled={false}
          onChange={[Function]}
          onFocus={[Function]}
          theme={
            Object {
              "error": String {
                "0": "#",
                "1": "d",
                "2": "3",
                "3": "2",
                "4": "f",
                "5": "2",
                "6": "f",
                "dark": "#9e0707",
                "light": "#e54242",
              },
              "grey": String {
                "0": "#",
                "1": "7",
                "2": "3",
                "3": "7",
                "4": "3",
                "5": "7",
                "6": "3",
                "dark": "#202020",
                "light": "#838383",
              },
              "primary": String {
                "0": "#",
                "1": "5",
                "2": "7",
                "3": "0",
                "4": "7",
                "5": "e",
                "6": "b",
                "dark": "#4a0072",
                "light": "#6217ed",
              },
              "success": String {
                "0": "#",
                "1": "3",
                "2": "0",
                "3": "a",
                "4": "6",
                "5": "4",
                "6": "a",
                "dark": " #178b30",
                "light": "#42b45b",
              },
              "warning": String {
                "0": "#",
                "1": "f",
                "2": "f",
                "3": "9",
                "4": "9",
                "5": "2",
                "6": "6",
                "dark": "#ff8800",
                "light": "#ffa726",
              },
            }
          }
          type="text"
        >
          <StyledComponent
            autoComplete="none"
            disabled={false}
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bZQynM",
                  "isStatic": false,
                  "lastClassName": "dqTFug",
                  "rules": Array [
                    "
    position: relative;

    width: 100%;
    border: none;
    cursor: inherit;
    caret-color: ",
                    [Function],
                    ";
    font-size: 14px;
    background-color: transparent;

    &:focus {
        outline: none;
    }
",
                  ],
                },
                "displayName": "styled.input",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bZQynM",
                "target": "input",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={
              Object {
                "current": <input
                  autocomplete="none"
                  class="sc-bZQynM dqTFug"
                  type="text"
                  value=""
                />,
              }
            }
            onChange={[Function]}
            onFocus={[Function]}
            theme={
              Object {
                "error": String {
                  "0": "#",
                  "1": "d",
                  "2": "3",
                  "3": "2",
                  "4": "f",
                  "5": "2",
                  "6": "f",
                  "dark": "#9e0707",
                  "light": "#e54242",
                },
                "grey": String {
                  "0": "#",
                  "1": "7",
                  "2": "3",
                  "3": "7",
                  "4": "3",
                  "5": "7",
                  "6": "3",
                  "dark": "#202020",
                  "light": "#838383",
                },
                "primary": String {
                  "0": "#",
                  "1": "5",
                  "2": "7",
                  "3": "0",
                  "4": "7",
                  "5": "e",
                  "6": "b",
                  "dark": "#4a0072",
                  "light": "#6217ed",
                },
                "success": String {
                  "0": "#",
                  "1": "3",
                  "2": "0",
                  "3": "a",
                  "4": "6",
                  "5": "4",
                  "6": "a",
                  "dark": " #178b30",
                  "light": "#42b45b",
                },
                "warning": String {
                  "0": "#",
                  "1": "f",
                  "2": "f",
                  "3": "9",
                  "4": "9",
                  "5": "2",
                  "6": "6",
                  "dark": "#ff8800",
                  "light": "#ffa726",
                },
              }
            }
            type="text"
          >
            <input
              autoComplete="none"
              className="sc-bZQynM dqTFug"
              disabled={false}
              onChange={[Function]}
              onFocus={[Function]}
              type="text"
            />
          </StyledComponent>
        </styled.input>
        <Styled(Icon)
          icon="info"
          size="large"
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "_foldedDefaultProps": Object {
                  "icon": "info",
                  "size": "large",
                },
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": false,
                  "lastClassName": "uCXZx",
                  "rules": Array [
                    "
    cursor: default;
",
                  ],
                },
                "displayName": "Styled(Icon)",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            icon="info"
            size="large"
          >
            <Icon
              className="sc-bwzfXH uCXZx"
              icon="info"
              size="large"
            >
              <styled.i
                className="material-icons sc-bwzfXH uCXZx"
                onClick={[Function]}
                size="large"
              >
                <StyledComponent
                  className="material-icons sc-bwzfXH uCXZx"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-bdVaJa",
                        "isStatic": false,
                        "lastClassName": "widyX",
                        "rules": Array [
                          "
    font-size: ",
                          [Function],
                          ";
",
                        ],
                      },
                      "displayName": "styled.i",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-bdVaJa",
                      "target": "i",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  onClick={[Function]}
                  size="large"
                >
                  <i
                    className="sc-bdVaJa widyX material-icons sc-bwzfXH uCXZx"
                    onClick={[Function]}
                    size="large"
                  >
                    info
                  </i>
                </StyledComponent>
              </styled.i>
            </Icon>
          </StyledComponent>
        </Styled(Icon)>
        <styled.span>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-ifAKCX",
                  "isStatic": false,
                  "lastClassName": "iwTHmR",
                  "rules": Array [
                    "
    position: absolute;
    visibility: hidden;
    bottom: -20px;
    left: 8px;
    font-size: 14px;
",
                  ],
                },
                "displayName": "styled.span",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-ifAKCX",
                "target": "span",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <span
              className="sc-ifAKCX iwTHmR"
            >
              Uh Oh
            </span>
          </StyledComponent>
        </styled.span>
        <styled.span>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-EHOje",
                  "isStatic": false,
                  "lastClassName": "iMxrDv",
                  "rules": Array [
                    "
    position: absolute;
    visibility: hidden;
    bottom: -20px;
    width: 100%;
    font-size: 14px;
    color: rgb(117, 117, 117);
",
                  ],
                },
                "displayName": "styled.span",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-EHOje",
                "target": "span",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <span
              className="sc-EHOje iMxrDv"
            />
          </StyledComponent>
        </styled.span>
      </div>
    </StyledComponent>
  </styled.div>
</Input>
`;

exports[`Input rendering should match the focused snapshot 1`] = `
<Input
  disabled={false}
  theme={
    Object {
      "error": String {
        "0": "#",
        "1": "d",
        "2": "3",
        "3": "2",
        "4": "f",
        "5": "2",
        "6": "f",
        "dark": "#9e0707",
        "light": "#e54242",
      },
      "grey": String {
        "0": "#",
        "1": "7",
        "2": "3",
        "3": "7",
        "4": "3",
        "5": "7",
        "6": "3",
        "dark": "#202020",
        "light": "#838383",
      },
      "primary": String {
        "0": "#",
        "1": "5",
        "2": "7",
        "3": "0",
        "4": "7",
        "5": "e",
        "6": "b",
        "dark": "#4a0072",
        "light": "#6217ed",
      },
      "success": String {
        "0": "#",
        "1": "3",
        "2": "0",
        "3": "a",
        "4": "6",
        "5": "4",
        "6": "a",
        "dark": " #178b30",
        "light": "#42b45b",
      },
      "warning": String {
        "0": "#",
        "1": "f",
        "2": "f",
        "3": "9",
        "4": "9",
        "5": "2",
        "6": "6",
        "dark": "#ff8800",
        "light": "#ffa726",
      },
    }
  }
  type="text"
>
  <styled.div
    data-testid="container"
    disabled={false}
    focused={true}
    onClick={[Function]}
    theme={
      Object {
        "error": String {
          "0": "#",
          "1": "d",
          "2": "3",
          "3": "2",
          "4": "f",
          "5": "2",
          "6": "f",
          "dark": "#9e0707",
          "light": "#e54242",
        },
        "grey": String {
          "0": "#",
          "1": "7",
          "2": "3",
          "3": "7",
          "4": "3",
          "5": "7",
          "6": "3",
          "dark": "#202020",
          "light": "#838383",
        },
        "primary": String {
          "0": "#",
          "1": "5",
          "2": "7",
          "3": "0",
          "4": "7",
          "5": "e",
          "6": "b",
          "dark": "#4a0072",
          "light": "#6217ed",
        },
        "success": String {
          "0": "#",
          "1": "3",
          "2": "0",
          "3": "a",
          "4": "6",
          "5": "4",
          "6": "a",
          "dark": " #178b30",
          "light": "#42b45b",
        },
        "warning": String {
          "0": "#",
          "1": "f",
          "2": "f",
          "3": "9",
          "4": "9",
          "5": "2",
          "6": "6",
          "dark": "#ff8800",
          "light": "#ffa726",
        },
      }
    }
  >
    <StyledComponent
      data-testid="container"
      disabled={false}
      focused={true}
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bxivhb",
            "isStatic": false,
            "lastClassName": "fNmutX",
            "rules": Array [
              "
    position: relative;
    display: flex;

    margin: 10px 10px 30px 10px;
    border: solid 1px rgb(117, 117, 117);
    border-radius: 4px;
    box-sizing: border-box;
    height: 44px;
    padding: 4px 8px;
    align-items: center;
    background-color: inherit;
    &:hover {
        cursor: text;
    }
    ",
              [Function],
              "
    ",
              [Function],
              ";
    ",
              [Function],
              ";
    ",
              [Function],
              ";
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bxivhb",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={
        Object {
          "current": <div
            class="sc-bxivhb fNmutX"
            data-testid="container"
          >
            <input
              autocomplete="none"
              class="sc-bZQynM dqTFug"
              type="text"
              value=""
            />
            <span
              class="sc-ifAKCX iwTHmR"
            />
            <span
              class="sc-EHOje iMxrDv"
            />
          </div>,
        }
      }
      onClick={[Function]}
      theme={
        Object {
          "error": String {
            "0": "#",
            "1": "d",
            "2": "3",
            "3": "2",
            "4": "f",
            "5": "2",
            "6": "f",
            "dark": "#9e0707",
            "light": "#e54242",
          },
          "grey": String {
            "0": "#",
            "1": "7",
            "2": "3",
            "3": "7",
            "4": "3",
            "5": "7",
            "6": "3",
            "dark": "#202020",
            "light": "#838383",
          },
          "primary": String {
            "0": "#",
            "1": "5",
            "2": "7",
            "3": "0",
            "4": "7",
            "5": "e",
            "6": "b",
            "dark": "#4a0072",
            "light": "#6217ed",
          },
          "success": String {
            "0": "#",
            "1": "3",
            "2": "0",
            "3": "a",
            "4": "6",
            "5": "4",
            "6": "a",
            "dark": " #178b30",
            "light": "#42b45b",
          },
          "warning": String {
            "0": "#",
            "1": "f",
            "2": "f",
            "3": "9",
            "4": "9",
            "5": "2",
            "6": "6",
            "dark": "#ff8800",
            "light": "#ffa726",
          },
        }
      }
    >
      <div
        className="sc-bxivhb fNmutX"
        data-testid="container"
        disabled={false}
        onClick={[Function]}
      >
        <styled.input
          autoComplete="none"
          disabled={false}
          onChange={[Function]}
          onFocus={[Function]}
          theme={
            Object {
              "error": String {
                "0": "#",
                "1": "d",
                "2": "3",
                "3": "2",
                "4": "f",
                "5": "2",
                "6": "f",
                "dark": "#9e0707",
                "light": "#e54242",
              },
              "grey": String {
                "0": "#",
                "1": "7",
                "2": "3",
                "3": "7",
                "4": "3",
                "5": "7",
                "6": "3",
                "dark": "#202020",
                "light": "#838383",
              },
              "primary": String {
                "0": "#",
                "1": "5",
                "2": "7",
                "3": "0",
                "4": "7",
                "5": "e",
                "6": "b",
                "dark": "#4a0072",
                "light": "#6217ed",
              },
              "success": String {
                "0": "#",
                "1": "3",
                "2": "0",
                "3": "a",
                "4": "6",
                "5": "4",
                "6": "a",
                "dark": " #178b30",
                "light": "#42b45b",
              },
              "warning": String {
                "0": "#",
                "1": "f",
                "2": "f",
                "3": "9",
                "4": "9",
                "5": "2",
                "6": "6",
                "dark": "#ff8800",
                "light": "#ffa726",
              },
            }
          }
          type="text"
        >
          <StyledComponent
            autoComplete="none"
            disabled={false}
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bZQynM",
                  "isStatic": false,
                  "lastClassName": "dqTFug",
                  "rules": Array [
                    "
    position: relative;

    width: 100%;
    border: none;
    cursor: inherit;
    caret-color: ",
                    [Function],
                    ";
    font-size: 14px;
    background-color: transparent;

    &:focus {
        outline: none;
    }
",
                  ],
                },
                "displayName": "styled.input",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bZQynM",
                "target": "input",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={
              Object {
                "current": <input
                  autocomplete="none"
                  class="sc-bZQynM dqTFug"
                  type="text"
                  value=""
                />,
              }
            }
            onChange={[Function]}
            onFocus={[Function]}
            theme={
              Object {
                "error": String {
                  "0": "#",
                  "1": "d",
                  "2": "3",
                  "3": "2",
                  "4": "f",
                  "5": "2",
                  "6": "f",
                  "dark": "#9e0707",
                  "light": "#e54242",
                },
                "grey": String {
                  "0": "#",
                  "1": "7",
                  "2": "3",
                  "3": "7",
                  "4": "3",
                  "5": "7",
                  "6": "3",
                  "dark": "#202020",
                  "light": "#838383",
                },
                "primary": String {
                  "0": "#",
                  "1": "5",
                  "2": "7",
                  "3": "0",
                  "4": "7",
                  "5": "e",
                  "6": "b",
                  "dark": "#4a0072",
                  "light": "#6217ed",
                },
                "success": String {
                  "0": "#",
                  "1": "3",
                  "2": "0",
                  "3": "a",
                  "4": "6",
                  "5": "4",
                  "6": "a",
                  "dark": " #178b30",
                  "light": "#42b45b",
                },
                "warning": String {
                  "0": "#",
                  "1": "f",
                  "2": "f",
                  "3": "9",
                  "4": "9",
                  "5": "2",
                  "6": "6",
                  "dark": "#ff8800",
                  "light": "#ffa726",
                },
              }
            }
            type="text"
          >
            <input
              autoComplete="none"
              className="sc-bZQynM dqTFug"
              disabled={false}
              onChange={[Function]}
              onFocus={[Function]}
              type="text"
            />
          </StyledComponent>
        </styled.input>
        <styled.span>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-ifAKCX",
                  "isStatic": false,
                  "lastClassName": "iwTHmR",
                  "rules": Array [
                    "
    position: absolute;
    visibility: hidden;
    bottom: -20px;
    left: 8px;
    font-size: 14px;
",
                  ],
                },
                "displayName": "styled.span",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-ifAKCX",
                "target": "span",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <span
              className="sc-ifAKCX iwTHmR"
            />
          </StyledComponent>
        </styled.span>
        <styled.span>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-EHOje",
                  "isStatic": false,
                  "lastClassName": "iMxrDv",
                  "rules": Array [
                    "
    position: absolute;
    visibility: hidden;
    bottom: -20px;
    width: 100%;
    font-size: 14px;
    color: rgb(117, 117, 117);
",
                  ],
                },
                "displayName": "styled.span",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-EHOje",
                "target": "span",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <span
              className="sc-EHOje iMxrDv"
            />
          </StyledComponent>
        </styled.span>
      </div>
    </StyledComponent>
  </styled.div>
</Input>
`;

exports[`Input rendering should match the focused with text snapshot 1`] = `
<Input
  disabled={false}
  theme={
    Object {
      "error": String {
        "0": "#",
        "1": "d",
        "2": "3",
        "3": "2",
        "4": "f",
        "5": "2",
        "6": "f",
        "dark": "#9e0707",
        "light": "#e54242",
      },
      "grey": String {
        "0": "#",
        "1": "7",
        "2": "3",
        "3": "7",
        "4": "3",
        "5": "7",
        "6": "3",
        "dark": "#202020",
        "light": "#838383",
      },
      "primary": String {
        "0": "#",
        "1": "5",
        "2": "7",
        "3": "0",
        "4": "7",
        "5": "e",
        "6": "b",
        "dark": "#4a0072",
        "light": "#6217ed",
      },
      "success": String {
        "0": "#",
        "1": "3",
        "2": "0",
        "3": "a",
        "4": "6",
        "5": "4",
        "6": "a",
        "dark": " #178b30",
        "light": "#42b45b",
      },
      "warning": String {
        "0": "#",
        "1": "f",
        "2": "f",
        "3": "9",
        "4": "9",
        "5": "2",
        "6": "6",
        "dark": "#ff8800",
        "light": "#ffa726",
      },
    }
  }
  type="text"
  value="Hello"
>
  <styled.div
    data-testid="container"
    disabled={false}
    focused={true}
    onClick={[Function]}
    theme={
      Object {
        "error": String {
          "0": "#",
          "1": "d",
          "2": "3",
          "3": "2",
          "4": "f",
          "5": "2",
          "6": "f",
          "dark": "#9e0707",
          "light": "#e54242",
        },
        "grey": String {
          "0": "#",
          "1": "7",
          "2": "3",
          "3": "7",
          "4": "3",
          "5": "7",
          "6": "3",
          "dark": "#202020",
          "light": "#838383",
        },
        "primary": String {
          "0": "#",
          "1": "5",
          "2": "7",
          "3": "0",
          "4": "7",
          "5": "e",
          "6": "b",
          "dark": "#4a0072",
          "light": "#6217ed",
        },
        "success": String {
          "0": "#",
          "1": "3",
          "2": "0",
          "3": "a",
          "4": "6",
          "5": "4",
          "6": "a",
          "dark": " #178b30",
          "light": "#42b45b",
        },
        "warning": String {
          "0": "#",
          "1": "f",
          "2": "f",
          "3": "9",
          "4": "9",
          "5": "2",
          "6": "6",
          "dark": "#ff8800",
          "light": "#ffa726",
        },
      }
    }
    value="Hello"
  >
    <StyledComponent
      data-testid="container"
      disabled={false}
      focused={true}
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bxivhb",
            "isStatic": false,
            "lastClassName": "fNmutX",
            "rules": Array [
              "
    position: relative;
    display: flex;

    margin: 10px 10px 30px 10px;
    border: solid 1px rgb(117, 117, 117);
    border-radius: 4px;
    box-sizing: border-box;
    height: 44px;
    padding: 4px 8px;
    align-items: center;
    background-color: inherit;
    &:hover {
        cursor: text;
    }
    ",
              [Function],
              "
    ",
              [Function],
              ";
    ",
              [Function],
              ";
    ",
              [Function],
              ";
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bxivhb",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={
        Object {
          "current": <div
            class="sc-bxivhb fNmutX"
            data-testid="container"
            value="Hello"
          >
            <input
              autocomplete="none"
              class="sc-bZQynM dqTFug"
              type="text"
              value="Hello"
            />
            <span
              class="sc-ifAKCX iwTHmR"
            />
            <span
              class="sc-EHOje iMxrDv"
            />
          </div>,
        }
      }
      onClick={[Function]}
      theme={
        Object {
          "error": String {
            "0": "#",
            "1": "d",
            "2": "3",
            "3": "2",
            "4": "f",
            "5": "2",
            "6": "f",
            "dark": "#9e0707",
            "light": "#e54242",
          },
          "grey": String {
            "0": "#",
            "1": "7",
            "2": "3",
            "3": "7",
            "4": "3",
            "5": "7",
            "6": "3",
            "dark": "#202020",
            "light": "#838383",
          },
          "primary": String {
            "0": "#",
            "1": "5",
            "2": "7",
            "3": "0",
            "4": "7",
            "5": "e",
            "6": "b",
            "dark": "#4a0072",
            "light": "#6217ed",
          },
          "success": String {
            "0": "#",
            "1": "3",
            "2": "0",
            "3": "a",
            "4": "6",
            "5": "4",
            "6": "a",
            "dark": " #178b30",
            "light": "#42b45b",
          },
          "warning": String {
            "0": "#",
            "1": "f",
            "2": "f",
            "3": "9",
            "4": "9",
            "5": "2",
            "6": "6",
            "dark": "#ff8800",
            "light": "#ffa726",
          },
        }
      }
      value="Hello"
    >
      <div
        className="sc-bxivhb fNmutX"
        data-testid="container"
        disabled={false}
        onClick={[Function]}
        value="Hello"
      >
        <styled.input
          autoComplete="none"
          disabled={false}
          onChange={[Function]}
          onFocus={[Function]}
          theme={
            Object {
              "error": String {
                "0": "#",
                "1": "d",
                "2": "3",
                "3": "2",
                "4": "f",
                "5": "2",
                "6": "f",
                "dark": "#9e0707",
                "light": "#e54242",
              },
              "grey": String {
                "0": "#",
                "1": "7",
                "2": "3",
                "3": "7",
                "4": "3",
                "5": "7",
                "6": "3",
                "dark": "#202020",
                "light": "#838383",
              },
              "primary": String {
                "0": "#",
                "1": "5",
                "2": "7",
                "3": "0",
                "4": "7",
                "5": "e",
                "6": "b",
                "dark": "#4a0072",
                "light": "#6217ed",
              },
              "success": String {
                "0": "#",
                "1": "3",
                "2": "0",
                "3": "a",
                "4": "6",
                "5": "4",
                "6": "a",
                "dark": " #178b30",
                "light": "#42b45b",
              },
              "warning": String {
                "0": "#",
                "1": "f",
                "2": "f",
                "3": "9",
                "4": "9",
                "5": "2",
                "6": "6",
                "dark": "#ff8800",
                "light": "#ffa726",
              },
            }
          }
          type="text"
          value="Hello"
        >
          <StyledComponent
            autoComplete="none"
            disabled={false}
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bZQynM",
                  "isStatic": false,
                  "lastClassName": "dqTFug",
                  "rules": Array [
                    "
    position: relative;

    width: 100%;
    border: none;
    cursor: inherit;
    caret-color: ",
                    [Function],
                    ";
    font-size: 14px;
    background-color: transparent;

    &:focus {
        outline: none;
    }
",
                  ],
                },
                "displayName": "styled.input",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bZQynM",
                "target": "input",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={
              Object {
                "current": <input
                  autocomplete="none"
                  class="sc-bZQynM dqTFug"
                  type="text"
                  value="Hello"
                />,
              }
            }
            onChange={[Function]}
            onFocus={[Function]}
            theme={
              Object {
                "error": String {
                  "0": "#",
                  "1": "d",
                  "2": "3",
                  "3": "2",
                  "4": "f",
                  "5": "2",
                  "6": "f",
                  "dark": "#9e0707",
                  "light": "#e54242",
                },
                "grey": String {
                  "0": "#",
                  "1": "7",
                  "2": "3",
                  "3": "7",
                  "4": "3",
                  "5": "7",
                  "6": "3",
                  "dark": "#202020",
                  "light": "#838383",
                },
                "primary": String {
                  "0": "#",
                  "1": "5",
                  "2": "7",
                  "3": "0",
                  "4": "7",
                  "5": "e",
                  "6": "b",
                  "dark": "#4a0072",
                  "light": "#6217ed",
                },
                "success": String {
                  "0": "#",
                  "1": "3",
                  "2": "0",
                  "3": "a",
                  "4": "6",
                  "5": "4",
                  "6": "a",
                  "dark": " #178b30",
                  "light": "#42b45b",
                },
                "warning": String {
                  "0": "#",
                  "1": "f",
                  "2": "f",
                  "3": "9",
                  "4": "9",
                  "5": "2",
                  "6": "6",
                  "dark": "#ff8800",
                  "light": "#ffa726",
                },
              }
            }
            type="text"
            value="Hello"
          >
            <input
              autoComplete="none"
              className="sc-bZQynM dqTFug"
              disabled={false}
              onChange={[Function]}
              onFocus={[Function]}
              type="text"
              value="Hello"
            />
          </StyledComponent>
        </styled.input>
        <styled.span>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-ifAKCX",
                  "isStatic": false,
                  "lastClassName": "iwTHmR",
                  "rules": Array [
                    "
    position: absolute;
    visibility: hidden;
    bottom: -20px;
    left: 8px;
    font-size: 14px;
",
                  ],
                },
                "displayName": "styled.span",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-ifAKCX",
                "target": "span",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <span
              className="sc-ifAKCX iwTHmR"
            />
          </StyledComponent>
        </styled.span>
        <styled.span>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-EHOje",
                  "isStatic": false,
                  "lastClassName": "iMxrDv",
                  "rules": Array [
                    "
    position: absolute;
    visibility: hidden;
    bottom: -20px;
    width: 100%;
    font-size: 14px;
    color: rgb(117, 117, 117);
",
                  ],
                },
                "displayName": "styled.span",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-EHOje",
                "target": "span",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <span
              className="sc-EHOje iMxrDv"
            />
          </StyledComponent>
        </styled.span>
      </div>
    </StyledComponent>
  </styled.div>
</Input>
`;

exports[`Input rendering should match the hint text and error snapshot 1`] = `
<Input
  disabled={false}
  error="Uh Oh"
  hintText="Put something"
  theme={
    Object {
      "error": String {
        "0": "#",
        "1": "d",
        "2": "3",
        "3": "2",
        "4": "f",
        "5": "2",
        "6": "f",
        "dark": "#9e0707",
        "light": "#e54242",
      },
      "grey": String {
        "0": "#",
        "1": "7",
        "2": "3",
        "3": "7",
        "4": "3",
        "5": "7",
        "6": "3",
        "dark": "#202020",
        "light": "#838383",
      },
      "primary": String {
        "0": "#",
        "1": "5",
        "2": "7",
        "3": "0",
        "4": "7",
        "5": "e",
        "6": "b",
        "dark": "#4a0072",
        "light": "#6217ed",
      },
      "success": String {
        "0": "#",
        "1": "3",
        "2": "0",
        "3": "a",
        "4": "6",
        "5": "4",
        "6": "a",
        "dark": " #178b30",
        "light": "#42b45b",
      },
      "warning": String {
        "0": "#",
        "1": "f",
        "2": "f",
        "3": "9",
        "4": "9",
        "5": "2",
        "6": "6",
        "dark": "#ff8800",
        "light": "#ffa726",
      },
    }
  }
  type="text"
>
  <styled.div
    data-testid="container"
    disabled={false}
    error="Uh Oh"
    focused={false}
    hintText="Put something"
    onClick={[Function]}
    theme={
      Object {
        "error": String {
          "0": "#",
          "1": "d",
          "2": "3",
          "3": "2",
          "4": "f",
          "5": "2",
          "6": "f",
          "dark": "#9e0707",
          "light": "#e54242",
        },
        "grey": String {
          "0": "#",
          "1": "7",
          "2": "3",
          "3": "7",
          "4": "3",
          "5": "7",
          "6": "3",
          "dark": "#202020",
          "light": "#838383",
        },
        "primary": String {
          "0": "#",
          "1": "5",
          "2": "7",
          "3": "0",
          "4": "7",
          "5": "e",
          "6": "b",
          "dark": "#4a0072",
          "light": "#6217ed",
        },
        "success": String {
          "0": "#",
          "1": "3",
          "2": "0",
          "3": "a",
          "4": "6",
          "5": "4",
          "6": "a",
          "dark": " #178b30",
          "light": "#42b45b",
        },
        "warning": String {
          "0": "#",
          "1": "f",
          "2": "f",
          "3": "9",
          "4": "9",
          "5": "2",
          "6": "6",
          "dark": "#ff8800",
          "light": "#ffa726",
        },
      }
    }
  >
    <StyledComponent
      data-testid="container"
      disabled={false}
      error="Uh Oh"
      focused={false}
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bxivhb",
            "isStatic": false,
            "lastClassName": "dQRRFY",
            "rules": Array [
              "
    position: relative;
    display: flex;

    margin: 10px 10px 30px 10px;
    border: solid 1px rgb(117, 117, 117);
    border-radius: 4px;
    box-sizing: border-box;
    height: 44px;
    padding: 4px 8px;
    align-items: center;
    background-color: inherit;
    &:hover {
        cursor: text;
    }
    ",
              [Function],
              "
    ",
              [Function],
              ";
    ",
              [Function],
              ";
    ",
              [Function],
              ";
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bxivhb",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={
        Object {
          "current": <div
            class="sc-bxivhb dQRRFY"
            data-testid="container"
          >
            <input
              autocomplete="none"
              class="sc-bZQynM dqTFug"
              type="text"
              value=""
            />
            <i
              class="sc-bdVaJa widyX material-icons sc-bwzfXH uCXZx"
            >
              info
            </i>
            <span
              class="sc-ifAKCX iwTHmR"
            >
              Uh Oh
            </span>
            <span
              class="sc-EHOje iMxrDv"
            >
              Put something
            </span>
          </div>,
        }
      }
      hintText="Put something"
      onClick={[Function]}
      theme={
        Object {
          "error": String {
            "0": "#",
            "1": "d",
            "2": "3",
            "3": "2",
            "4": "f",
            "5": "2",
            "6": "f",
            "dark": "#9e0707",
            "light": "#e54242",
          },
          "grey": String {
            "0": "#",
            "1": "7",
            "2": "3",
            "3": "7",
            "4": "3",
            "5": "7",
            "6": "3",
            "dark": "#202020",
            "light": "#838383",
          },
          "primary": String {
            "0": "#",
            "1": "5",
            "2": "7",
            "3": "0",
            "4": "7",
            "5": "e",
            "6": "b",
            "dark": "#4a0072",
            "light": "#6217ed",
          },
          "success": String {
            "0": "#",
            "1": "3",
            "2": "0",
            "3": "a",
            "4": "6",
            "5": "4",
            "6": "a",
            "dark": " #178b30",
            "light": "#42b45b",
          },
          "warning": String {
            "0": "#",
            "1": "f",
            "2": "f",
            "3": "9",
            "4": "9",
            "5": "2",
            "6": "6",
            "dark": "#ff8800",
            "light": "#ffa726",
          },
        }
      }
    >
      <div
        className="sc-bxivhb dQRRFY"
        data-testid="container"
        disabled={false}
        onClick={[Function]}
      >
        <styled.input
          autoComplete="none"
          disabled={false}
          onChange={[Function]}
          onFocus={[Function]}
          theme={
            Object {
              "error": String {
                "0": "#",
                "1": "d",
                "2": "3",
                "3": "2",
                "4": "f",
                "5": "2",
                "6": "f",
                "dark": "#9e0707",
                "light": "#e54242",
              },
              "grey": String {
                "0": "#",
                "1": "7",
                "2": "3",
                "3": "7",
                "4": "3",
                "5": "7",
                "6": "3",
                "dark": "#202020",
                "light": "#838383",
              },
              "primary": String {
                "0": "#",
                "1": "5",
                "2": "7",
                "3": "0",
                "4": "7",
                "5": "e",
                "6": "b",
                "dark": "#4a0072",
                "light": "#6217ed",
              },
              "success": String {
                "0": "#",
                "1": "3",
                "2": "0",
                "3": "a",
                "4": "6",
                "5": "4",
                "6": "a",
                "dark": " #178b30",
                "light": "#42b45b",
              },
              "warning": String {
                "0": "#",
                "1": "f",
                "2": "f",
                "3": "9",
                "4": "9",
                "5": "2",
                "6": "6",
                "dark": "#ff8800",
                "light": "#ffa726",
              },
            }
          }
          type="text"
        >
          <StyledComponent
            autoComplete="none"
            disabled={false}
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bZQynM",
                  "isStatic": false,
                  "lastClassName": "dqTFug",
                  "rules": Array [
                    "
    position: relative;

    width: 100%;
    border: none;
    cursor: inherit;
    caret-color: ",
                    [Function],
                    ";
    font-size: 14px;
    background-color: transparent;

    &:focus {
        outline: none;
    }
",
                  ],
                },
                "displayName": "styled.input",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bZQynM",
                "target": "input",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={
              Object {
                "current": <input
                  autocomplete="none"
                  class="sc-bZQynM dqTFug"
                  type="text"
                  value=""
                />,
              }
            }
            onChange={[Function]}
            onFocus={[Function]}
            theme={
              Object {
                "error": String {
                  "0": "#",
                  "1": "d",
                  "2": "3",
                  "3": "2",
                  "4": "f",
                  "5": "2",
                  "6": "f",
                  "dark": "#9e0707",
                  "light": "#e54242",
                },
                "grey": String {
                  "0": "#",
                  "1": "7",
                  "2": "3",
                  "3": "7",
                  "4": "3",
                  "5": "7",
                  "6": "3",
                  "dark": "#202020",
                  "light": "#838383",
                },
                "primary": String {
                  "0": "#",
                  "1": "5",
                  "2": "7",
                  "3": "0",
                  "4": "7",
                  "5": "e",
                  "6": "b",
                  "dark": "#4a0072",
                  "light": "#6217ed",
                },
                "success": String {
                  "0": "#",
                  "1": "3",
                  "2": "0",
                  "3": "a",
                  "4": "6",
                  "5": "4",
                  "6": "a",
                  "dark": " #178b30",
                  "light": "#42b45b",
                },
                "warning": String {
                  "0": "#",
                  "1": "f",
                  "2": "f",
                  "3": "9",
                  "4": "9",
                  "5": "2",
                  "6": "6",
                  "dark": "#ff8800",
                  "light": "#ffa726",
                },
              }
            }
            type="text"
          >
            <input
              autoComplete="none"
              className="sc-bZQynM dqTFug"
              disabled={false}
              onChange={[Function]}
              onFocus={[Function]}
              type="text"
            />
          </StyledComponent>
        </styled.input>
        <Styled(Icon)
          icon="info"
          size="large"
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "_foldedDefaultProps": Object {
                  "icon": "info",
                  "size": "large",
                },
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": false,
                  "lastClassName": "uCXZx",
                  "rules": Array [
                    "
    cursor: default;
",
                  ],
                },
                "displayName": "Styled(Icon)",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            icon="info"
            size="large"
          >
            <Icon
              className="sc-bwzfXH uCXZx"
              icon="info"
              size="large"
            >
              <styled.i
                className="material-icons sc-bwzfXH uCXZx"
                onClick={[Function]}
                size="large"
              >
                <StyledComponent
                  className="material-icons sc-bwzfXH uCXZx"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-bdVaJa",
                        "isStatic": false,
                        "lastClassName": "widyX",
                        "rules": Array [
                          "
    font-size: ",
                          [Function],
                          ";
",
                        ],
                      },
                      "displayName": "styled.i",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-bdVaJa",
                      "target": "i",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  onClick={[Function]}
                  size="large"
                >
                  <i
                    className="sc-bdVaJa widyX material-icons sc-bwzfXH uCXZx"
                    onClick={[Function]}
                    size="large"
                  >
                    info
                  </i>
                </StyledComponent>
              </styled.i>
            </Icon>
          </StyledComponent>
        </Styled(Icon)>
        <styled.span>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-ifAKCX",
                  "isStatic": false,
                  "lastClassName": "iwTHmR",
                  "rules": Array [
                    "
    position: absolute;
    visibility: hidden;
    bottom: -20px;
    left: 8px;
    font-size: 14px;
",
                  ],
                },
                "displayName": "styled.span",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-ifAKCX",
                "target": "span",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <span
              className="sc-ifAKCX iwTHmR"
            >
              Uh Oh
            </span>
          </StyledComponent>
        </styled.span>
        <styled.span>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-EHOje",
                  "isStatic": false,
                  "lastClassName": "iMxrDv",
                  "rules": Array [
                    "
    position: absolute;
    visibility: hidden;
    bottom: -20px;
    width: 100%;
    font-size: 14px;
    color: rgb(117, 117, 117);
",
                  ],
                },
                "displayName": "styled.span",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-EHOje",
                "target": "span",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <span
              className="sc-EHOje iMxrDv"
            >
              Put something
            </span>
          </StyledComponent>
        </styled.span>
      </div>
    </StyledComponent>
  </styled.div>
</Input>
`;

exports[`Input rendering should match the hint text snapshot 1`] = `
<Input
  disabled={false}
  hintText="Put something"
  theme={
    Object {
      "error": String {
        "0": "#",
        "1": "d",
        "2": "3",
        "3": "2",
        "4": "f",
        "5": "2",
        "6": "f",
        "dark": "#9e0707",
        "light": "#e54242",
      },
      "grey": String {
        "0": "#",
        "1": "7",
        "2": "3",
        "3": "7",
        "4": "3",
        "5": "7",
        "6": "3",
        "dark": "#202020",
        "light": "#838383",
      },
      "primary": String {
        "0": "#",
        "1": "5",
        "2": "7",
        "3": "0",
        "4": "7",
        "5": "e",
        "6": "b",
        "dark": "#4a0072",
        "light": "#6217ed",
      },
      "success": String {
        "0": "#",
        "1": "3",
        "2": "0",
        "3": "a",
        "4": "6",
        "5": "4",
        "6": "a",
        "dark": " #178b30",
        "light": "#42b45b",
      },
      "warning": String {
        "0": "#",
        "1": "f",
        "2": "f",
        "3": "9",
        "4": "9",
        "5": "2",
        "6": "6",
        "dark": "#ff8800",
        "light": "#ffa726",
      },
    }
  }
  type="text"
>
  <styled.div
    data-testid="container"
    disabled={false}
    focused={false}
    hintText="Put something"
    onClick={[Function]}
    theme={
      Object {
        "error": String {
          "0": "#",
          "1": "d",
          "2": "3",
          "3": "2",
          "4": "f",
          "5": "2",
          "6": "f",
          "dark": "#9e0707",
          "light": "#e54242",
        },
        "grey": String {
          "0": "#",
          "1": "7",
          "2": "3",
          "3": "7",
          "4": "3",
          "5": "7",
          "6": "3",
          "dark": "#202020",
          "light": "#838383",
        },
        "primary": String {
          "0": "#",
          "1": "5",
          "2": "7",
          "3": "0",
          "4": "7",
          "5": "e",
          "6": "b",
          "dark": "#4a0072",
          "light": "#6217ed",
        },
        "success": String {
          "0": "#",
          "1": "3",
          "2": "0",
          "3": "a",
          "4": "6",
          "5": "4",
          "6": "a",
          "dark": " #178b30",
          "light": "#42b45b",
        },
        "warning": String {
          "0": "#",
          "1": "f",
          "2": "f",
          "3": "9",
          "4": "9",
          "5": "2",
          "6": "6",
          "dark": "#ff8800",
          "light": "#ffa726",
        },
      }
    }
  >
    <StyledComponent
      data-testid="container"
      disabled={false}
      focused={false}
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bxivhb",
            "isStatic": false,
            "lastClassName": "gfFlgk",
            "rules": Array [
              "
    position: relative;
    display: flex;

    margin: 10px 10px 30px 10px;
    border: solid 1px rgb(117, 117, 117);
    border-radius: 4px;
    box-sizing: border-box;
    height: 44px;
    padding: 4px 8px;
    align-items: center;
    background-color: inherit;
    &:hover {
        cursor: text;
    }
    ",
              [Function],
              "
    ",
              [Function],
              ";
    ",
              [Function],
              ";
    ",
              [Function],
              ";
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bxivhb",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={
        Object {
          "current": <div
            class="sc-bxivhb gfFlgk"
            data-testid="container"
          >
            <input
              autocomplete="none"
              class="sc-bZQynM dqTFug"
              type="text"
              value=""
            />
            <span
              class="sc-ifAKCX iwTHmR"
            />
            <span
              class="sc-EHOje iMxrDv"
            >
              Put something
            </span>
          </div>,
        }
      }
      hintText="Put something"
      onClick={[Function]}
      theme={
        Object {
          "error": String {
            "0": "#",
            "1": "d",
            "2": "3",
            "3": "2",
            "4": "f",
            "5": "2",
            "6": "f",
            "dark": "#9e0707",
            "light": "#e54242",
          },
          "grey": String {
            "0": "#",
            "1": "7",
            "2": "3",
            "3": "7",
            "4": "3",
            "5": "7",
            "6": "3",
            "dark": "#202020",
            "light": "#838383",
          },
          "primary": String {
            "0": "#",
            "1": "5",
            "2": "7",
            "3": "0",
            "4": "7",
            "5": "e",
            "6": "b",
            "dark": "#4a0072",
            "light": "#6217ed",
          },
          "success": String {
            "0": "#",
            "1": "3",
            "2": "0",
            "3": "a",
            "4": "6",
            "5": "4",
            "6": "a",
            "dark": " #178b30",
            "light": "#42b45b",
          },
          "warning": String {
            "0": "#",
            "1": "f",
            "2": "f",
            "3": "9",
            "4": "9",
            "5": "2",
            "6": "6",
            "dark": "#ff8800",
            "light": "#ffa726",
          },
        }
      }
    >
      <div
        className="sc-bxivhb gfFlgk"
        data-testid="container"
        disabled={false}
        onClick={[Function]}
      >
        <styled.input
          autoComplete="none"
          disabled={false}
          onChange={[Function]}
          onFocus={[Function]}
          theme={
            Object {
              "error": String {
                "0": "#",
                "1": "d",
                "2": "3",
                "3": "2",
                "4": "f",
                "5": "2",
                "6": "f",
                "dark": "#9e0707",
                "light": "#e54242",
              },
              "grey": String {
                "0": "#",
                "1": "7",
                "2": "3",
                "3": "7",
                "4": "3",
                "5": "7",
                "6": "3",
                "dark": "#202020",
                "light": "#838383",
              },
              "primary": String {
                "0": "#",
                "1": "5",
                "2": "7",
                "3": "0",
                "4": "7",
                "5": "e",
                "6": "b",
                "dark": "#4a0072",
                "light": "#6217ed",
              },
              "success": String {
                "0": "#",
                "1": "3",
                "2": "0",
                "3": "a",
                "4": "6",
                "5": "4",
                "6": "a",
                "dark": " #178b30",
                "light": "#42b45b",
              },
              "warning": String {
                "0": "#",
                "1": "f",
                "2": "f",
                "3": "9",
                "4": "9",
                "5": "2",
                "6": "6",
                "dark": "#ff8800",
                "light": "#ffa726",
              },
            }
          }
          type="text"
        >
          <StyledComponent
            autoComplete="none"
            disabled={false}
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bZQynM",
                  "isStatic": false,
                  "lastClassName": "dqTFug",
                  "rules": Array [
                    "
    position: relative;

    width: 100%;
    border: none;
    cursor: inherit;
    caret-color: ",
                    [Function],
                    ";
    font-size: 14px;
    background-color: transparent;

    &:focus {
        outline: none;
    }
",
                  ],
                },
                "displayName": "styled.input",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bZQynM",
                "target": "input",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={
              Object {
                "current": <input
                  autocomplete="none"
                  class="sc-bZQynM dqTFug"
                  type="text"
                  value=""
                />,
              }
            }
            onChange={[Function]}
            onFocus={[Function]}
            theme={
              Object {
                "error": String {
                  "0": "#",
                  "1": "d",
                  "2": "3",
                  "3": "2",
                  "4": "f",
                  "5": "2",
                  "6": "f",
                  "dark": "#9e0707",
                  "light": "#e54242",
                },
                "grey": String {
                  "0": "#",
                  "1": "7",
                  "2": "3",
                  "3": "7",
                  "4": "3",
                  "5": "7",
                  "6": "3",
                  "dark": "#202020",
                  "light": "#838383",
                },
                "primary": String {
                  "0": "#",
                  "1": "5",
                  "2": "7",
                  "3": "0",
                  "4": "7",
                  "5": "e",
                  "6": "b",
                  "dark": "#4a0072",
                  "light": "#6217ed",
                },
                "success": String {
                  "0": "#",
                  "1": "3",
                  "2": "0",
                  "3": "a",
                  "4": "6",
                  "5": "4",
                  "6": "a",
                  "dark": " #178b30",
                  "light": "#42b45b",
                },
                "warning": String {
                  "0": "#",
                  "1": "f",
                  "2": "f",
                  "3": "9",
                  "4": "9",
                  "5": "2",
                  "6": "6",
                  "dark": "#ff8800",
                  "light": "#ffa726",
                },
              }
            }
            type="text"
          >
            <input
              autoComplete="none"
              className="sc-bZQynM dqTFug"
              disabled={false}
              onChange={[Function]}
              onFocus={[Function]}
              type="text"
            />
          </StyledComponent>
        </styled.input>
        <styled.span>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-ifAKCX",
                  "isStatic": false,
                  "lastClassName": "iwTHmR",
                  "rules": Array [
                    "
    position: absolute;
    visibility: hidden;
    bottom: -20px;
    left: 8px;
    font-size: 14px;
",
                  ],
                },
                "displayName": "styled.span",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-ifAKCX",
                "target": "span",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <span
              className="sc-ifAKCX iwTHmR"
            />
          </StyledComponent>
        </styled.span>
        <styled.span>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-EHOje",
                  "isStatic": false,
                  "lastClassName": "iMxrDv",
                  "rules": Array [
                    "
    position: absolute;
    visibility: hidden;
    bottom: -20px;
    width: 100%;
    font-size: 14px;
    color: rgb(117, 117, 117);
",
                  ],
                },
                "displayName": "styled.span",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-EHOje",
                "target": "span",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <span
              className="sc-EHOje iMxrDv"
            >
              Put something
            </span>
          </StyledComponent>
        </styled.span>
      </div>
    </StyledComponent>
  </styled.div>
</Input>
`;

exports[`Input rendering should match the readonly snapshot 1`] = `
<Input
  disabled={false}
  readOnly={true}
  theme={
    Object {
      "error": String {
        "0": "#",
        "1": "d",
        "2": "3",
        "3": "2",
        "4": "f",
        "5": "2",
        "6": "f",
        "dark": "#9e0707",
        "light": "#e54242",
      },
      "grey": String {
        "0": "#",
        "1": "7",
        "2": "3",
        "3": "7",
        "4": "3",
        "5": "7",
        "6": "3",
        "dark": "#202020",
        "light": "#838383",
      },
      "primary": String {
        "0": "#",
        "1": "5",
        "2": "7",
        "3": "0",
        "4": "7",
        "5": "e",
        "6": "b",
        "dark": "#4a0072",
        "light": "#6217ed",
      },
      "success": String {
        "0": "#",
        "1": "3",
        "2": "0",
        "3": "a",
        "4": "6",
        "5": "4",
        "6": "a",
        "dark": " #178b30",
        "light": "#42b45b",
      },
      "warning": String {
        "0": "#",
        "1": "f",
        "2": "f",
        "3": "9",
        "4": "9",
        "5": "2",
        "6": "6",
        "dark": "#ff8800",
        "light": "#ffa726",
      },
    }
  }
  type="text"
  value="Some Value"
>
  <styled.div
    data-testid="container"
    disabled={false}
    focused={false}
    onClick={[Function]}
    theme={
      Object {
        "error": String {
          "0": "#",
          "1": "d",
          "2": "3",
          "3": "2",
          "4": "f",
          "5": "2",
          "6": "f",
          "dark": "#9e0707",
          "light": "#e54242",
        },
        "grey": String {
          "0": "#",
          "1": "7",
          "2": "3",
          "3": "7",
          "4": "3",
          "5": "7",
          "6": "3",
          "dark": "#202020",
          "light": "#838383",
        },
        "primary": String {
          "0": "#",
          "1": "5",
          "2": "7",
          "3": "0",
          "4": "7",
          "5": "e",
          "6": "b",
          "dark": "#4a0072",
          "light": "#6217ed",
        },
        "success": String {
          "0": "#",
          "1": "3",
          "2": "0",
          "3": "a",
          "4": "6",
          "5": "4",
          "6": "a",
          "dark": " #178b30",
          "light": "#42b45b",
        },
        "warning": String {
          "0": "#",
          "1": "f",
          "2": "f",
          "3": "9",
          "4": "9",
          "5": "2",
          "6": "6",
          "dark": "#ff8800",
          "light": "#ffa726",
        },
      }
    }
    value="Some Value"
  >
    <StyledComponent
      data-testid="container"
      disabled={false}
      focused={false}
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bxivhb",
            "isStatic": false,
            "lastClassName": "oUoDI",
            "rules": Array [
              "
    position: relative;
    display: flex;

    margin: 10px 10px 30px 10px;
    border: solid 1px rgb(117, 117, 117);
    border-radius: 4px;
    box-sizing: border-box;
    height: 44px;
    padding: 4px 8px;
    align-items: center;
    background-color: inherit;
    &:hover {
        cursor: text;
    }
    ",
              [Function],
              "
    ",
              [Function],
              ";
    ",
              [Function],
              ";
    ",
              [Function],
              ";
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bxivhb",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={
        Object {
          "current": <div
            class="sc-bxivhb oUoDI"
            data-testid="container"
            value="Some Value"
          >
            <input
              autocomplete="none"
              class="sc-bZQynM dqTFug"
              readonly=""
              type="text"
              value="Some Value"
            />
            <span
              class="sc-ifAKCX iwTHmR"
            />
            <span
              class="sc-EHOje iMxrDv"
            />
          </div>,
        }
      }
      onClick={[Function]}
      theme={
        Object {
          "error": String {
            "0": "#",
            "1": "d",
            "2": "3",
            "3": "2",
            "4": "f",
            "5": "2",
            "6": "f",
            "dark": "#9e0707",
            "light": "#e54242",
          },
          "grey": String {
            "0": "#",
            "1": "7",
            "2": "3",
            "3": "7",
            "4": "3",
            "5": "7",
            "6": "3",
            "dark": "#202020",
            "light": "#838383",
          },
          "primary": String {
            "0": "#",
            "1": "5",
            "2": "7",
            "3": "0",
            "4": "7",
            "5": "e",
            "6": "b",
            "dark": "#4a0072",
            "light": "#6217ed",
          },
          "success": String {
            "0": "#",
            "1": "3",
            "2": "0",
            "3": "a",
            "4": "6",
            "5": "4",
            "6": "a",
            "dark": " #178b30",
            "light": "#42b45b",
          },
          "warning": String {
            "0": "#",
            "1": "f",
            "2": "f",
            "3": "9",
            "4": "9",
            "5": "2",
            "6": "6",
            "dark": "#ff8800",
            "light": "#ffa726",
          },
        }
      }
      value="Some Value"
    >
      <div
        className="sc-bxivhb oUoDI"
        data-testid="container"
        disabled={false}
        onClick={[Function]}
        value="Some Value"
      >
        <styled.input
          autoComplete="none"
          disabled={false}
          onChange={[Function]}
          onFocus={[Function]}
          readOnly={true}
          theme={
            Object {
              "error": String {
                "0": "#",
                "1": "d",
                "2": "3",
                "3": "2",
                "4": "f",
                "5": "2",
                "6": "f",
                "dark": "#9e0707",
                "light": "#e54242",
              },
              "grey": String {
                "0": "#",
                "1": "7",
                "2": "3",
                "3": "7",
                "4": "3",
                "5": "7",
                "6": "3",
                "dark": "#202020",
                "light": "#838383",
              },
              "primary": String {
                "0": "#",
                "1": "5",
                "2": "7",
                "3": "0",
                "4": "7",
                "5": "e",
                "6": "b",
                "dark": "#4a0072",
                "light": "#6217ed",
              },
              "success": String {
                "0": "#",
                "1": "3",
                "2": "0",
                "3": "a",
                "4": "6",
                "5": "4",
                "6": "a",
                "dark": " #178b30",
                "light": "#42b45b",
              },
              "warning": String {
                "0": "#",
                "1": "f",
                "2": "f",
                "3": "9",
                "4": "9",
                "5": "2",
                "6": "6",
                "dark": "#ff8800",
                "light": "#ffa726",
              },
            }
          }
          type="text"
          value="Some Value"
        >
          <StyledComponent
            autoComplete="none"
            disabled={false}
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bZQynM",
                  "isStatic": false,
                  "lastClassName": "dqTFug",
                  "rules": Array [
                    "
    position: relative;

    width: 100%;
    border: none;
    cursor: inherit;
    caret-color: ",
                    [Function],
                    ";
    font-size: 14px;
    background-color: transparent;

    &:focus {
        outline: none;
    }
",
                  ],
                },
                "displayName": "styled.input",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bZQynM",
                "target": "input",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={
              Object {
                "current": <input
                  autocomplete="none"
                  class="sc-bZQynM dqTFug"
                  readonly=""
                  type="text"
                  value="Some Value"
                />,
              }
            }
            onChange={[Function]}
            onFocus={[Function]}
            readOnly={true}
            theme={
              Object {
                "error": String {
                  "0": "#",
                  "1": "d",
                  "2": "3",
                  "3": "2",
                  "4": "f",
                  "5": "2",
                  "6": "f",
                  "dark": "#9e0707",
                  "light": "#e54242",
                },
                "grey": String {
                  "0": "#",
                  "1": "7",
                  "2": "3",
                  "3": "7",
                  "4": "3",
                  "5": "7",
                  "6": "3",
                  "dark": "#202020",
                  "light": "#838383",
                },
                "primary": String {
                  "0": "#",
                  "1": "5",
                  "2": "7",
                  "3": "0",
                  "4": "7",
                  "5": "e",
                  "6": "b",
                  "dark": "#4a0072",
                  "light": "#6217ed",
                },
                "success": String {
                  "0": "#",
                  "1": "3",
                  "2": "0",
                  "3": "a",
                  "4": "6",
                  "5": "4",
                  "6": "a",
                  "dark": " #178b30",
                  "light": "#42b45b",
                },
                "warning": String {
                  "0": "#",
                  "1": "f",
                  "2": "f",
                  "3": "9",
                  "4": "9",
                  "5": "2",
                  "6": "6",
                  "dark": "#ff8800",
                  "light": "#ffa726",
                },
              }
            }
            type="text"
            value="Some Value"
          >
            <input
              autoComplete="none"
              className="sc-bZQynM dqTFug"
              disabled={false}
              onChange={[Function]}
              onFocus={[Function]}
              readOnly={true}
              type="text"
              value="Some Value"
            />
          </StyledComponent>
        </styled.input>
        <styled.span>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-ifAKCX",
                  "isStatic": false,
                  "lastClassName": "iwTHmR",
                  "rules": Array [
                    "
    position: absolute;
    visibility: hidden;
    bottom: -20px;
    left: 8px;
    font-size: 14px;
",
                  ],
                },
                "displayName": "styled.span",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-ifAKCX",
                "target": "span",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <span
              className="sc-ifAKCX iwTHmR"
            />
          </StyledComponent>
        </styled.span>
        <styled.span>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-EHOje",
                  "isStatic": false,
                  "lastClassName": "iMxrDv",
                  "rules": Array [
                    "
    position: absolute;
    visibility: hidden;
    bottom: -20px;
    width: 100%;
    font-size: 14px;
    color: rgb(117, 117, 117);
",
                  ],
                },
                "displayName": "styled.span",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-EHOje",
                "target": "span",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <span
              className="sc-EHOje iMxrDv"
            />
          </StyledComponent>
        </styled.span>
      </div>
    </StyledComponent>
  </styled.div>
</Input>
`;

exports[`Input rendering should match the snapshot with a value  1`] = `
<Input
  disabled={false}
  theme={
    Object {
      "error": String {
        "0": "#",
        "1": "d",
        "2": "3",
        "3": "2",
        "4": "f",
        "5": "2",
        "6": "f",
        "dark": "#9e0707",
        "light": "#e54242",
      },
      "grey": String {
        "0": "#",
        "1": "7",
        "2": "3",
        "3": "7",
        "4": "3",
        "5": "7",
        "6": "3",
        "dark": "#202020",
        "light": "#838383",
      },
      "primary": String {
        "0": "#",
        "1": "5",
        "2": "7",
        "3": "0",
        "4": "7",
        "5": "e",
        "6": "b",
        "dark": "#4a0072",
        "light": "#6217ed",
      },
      "success": String {
        "0": "#",
        "1": "3",
        "2": "0",
        "3": "a",
        "4": "6",
        "5": "4",
        "6": "a",
        "dark": " #178b30",
        "light": "#42b45b",
      },
      "warning": String {
        "0": "#",
        "1": "f",
        "2": "f",
        "3": "9",
        "4": "9",
        "5": "2",
        "6": "6",
        "dark": "#ff8800",
        "light": "#ffa726",
      },
    }
  }
  type="text"
  value="Hello"
>
  <styled.div
    data-testid="container"
    disabled={false}
    focused={false}
    onClick={[Function]}
    theme={
      Object {
        "error": String {
          "0": "#",
          "1": "d",
          "2": "3",
          "3": "2",
          "4": "f",
          "5": "2",
          "6": "f",
          "dark": "#9e0707",
          "light": "#e54242",
        },
        "grey": String {
          "0": "#",
          "1": "7",
          "2": "3",
          "3": "7",
          "4": "3",
          "5": "7",
          "6": "3",
          "dark": "#202020",
          "light": "#838383",
        },
        "primary": String {
          "0": "#",
          "1": "5",
          "2": "7",
          "3": "0",
          "4": "7",
          "5": "e",
          "6": "b",
          "dark": "#4a0072",
          "light": "#6217ed",
        },
        "success": String {
          "0": "#",
          "1": "3",
          "2": "0",
          "3": "a",
          "4": "6",
          "5": "4",
          "6": "a",
          "dark": " #178b30",
          "light": "#42b45b",
        },
        "warning": String {
          "0": "#",
          "1": "f",
          "2": "f",
          "3": "9",
          "4": "9",
          "5": "2",
          "6": "6",
          "dark": "#ff8800",
          "light": "#ffa726",
        },
      }
    }
    value="Hello"
  >
    <StyledComponent
      data-testid="container"
      disabled={false}
      focused={false}
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bxivhb",
            "isStatic": false,
            "lastClassName": "oUoDI",
            "rules": Array [
              "
    position: relative;
    display: flex;

    margin: 10px 10px 30px 10px;
    border: solid 1px rgb(117, 117, 117);
    border-radius: 4px;
    box-sizing: border-box;
    height: 44px;
    padding: 4px 8px;
    align-items: center;
    background-color: inherit;
    &:hover {
        cursor: text;
    }
    ",
              [Function],
              "
    ",
              [Function],
              ";
    ",
              [Function],
              ";
    ",
              [Function],
              ";
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bxivhb",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={
        Object {
          "current": <div
            class="sc-bxivhb oUoDI"
            data-testid="container"
            value="Hello"
          >
            <input
              autocomplete="none"
              class="sc-bZQynM dqTFug"
              type="text"
              value="Hello"
            />
            <span
              class="sc-ifAKCX iwTHmR"
            />
            <span
              class="sc-EHOje iMxrDv"
            />
          </div>,
        }
      }
      onClick={[Function]}
      theme={
        Object {
          "error": String {
            "0": "#",
            "1": "d",
            "2": "3",
            "3": "2",
            "4": "f",
            "5": "2",
            "6": "f",
            "dark": "#9e0707",
            "light": "#e54242",
          },
          "grey": String {
            "0": "#",
            "1": "7",
            "2": "3",
            "3": "7",
            "4": "3",
            "5": "7",
            "6": "3",
            "dark": "#202020",
            "light": "#838383",
          },
          "primary": String {
            "0": "#",
            "1": "5",
            "2": "7",
            "3": "0",
            "4": "7",
            "5": "e",
            "6": "b",
            "dark": "#4a0072",
            "light": "#6217ed",
          },
          "success": String {
            "0": "#",
            "1": "3",
            "2": "0",
            "3": "a",
            "4": "6",
            "5": "4",
            "6": "a",
            "dark": " #178b30",
            "light": "#42b45b",
          },
          "warning": String {
            "0": "#",
            "1": "f",
            "2": "f",
            "3": "9",
            "4": "9",
            "5": "2",
            "6": "6",
            "dark": "#ff8800",
            "light": "#ffa726",
          },
        }
      }
      value="Hello"
    >
      <div
        className="sc-bxivhb oUoDI"
        data-testid="container"
        disabled={false}
        onClick={[Function]}
        value="Hello"
      >
        <styled.input
          autoComplete="none"
          disabled={false}
          onChange={[Function]}
          onFocus={[Function]}
          theme={
            Object {
              "error": String {
                "0": "#",
                "1": "d",
                "2": "3",
                "3": "2",
                "4": "f",
                "5": "2",
                "6": "f",
                "dark": "#9e0707",
                "light": "#e54242",
              },
              "grey": String {
                "0": "#",
                "1": "7",
                "2": "3",
                "3": "7",
                "4": "3",
                "5": "7",
                "6": "3",
                "dark": "#202020",
                "light": "#838383",
              },
              "primary": String {
                "0": "#",
                "1": "5",
                "2": "7",
                "3": "0",
                "4": "7",
                "5": "e",
                "6": "b",
                "dark": "#4a0072",
                "light": "#6217ed",
              },
              "success": String {
                "0": "#",
                "1": "3",
                "2": "0",
                "3": "a",
                "4": "6",
                "5": "4",
                "6": "a",
                "dark": " #178b30",
                "light": "#42b45b",
              },
              "warning": String {
                "0": "#",
                "1": "f",
                "2": "f",
                "3": "9",
                "4": "9",
                "5": "2",
                "6": "6",
                "dark": "#ff8800",
                "light": "#ffa726",
              },
            }
          }
          type="text"
          value="Hello"
        >
          <StyledComponent
            autoComplete="none"
            disabled={false}
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bZQynM",
                  "isStatic": false,
                  "lastClassName": "dqTFug",
                  "rules": Array [
                    "
    position: relative;

    width: 100%;
    border: none;
    cursor: inherit;
    caret-color: ",
                    [Function],
                    ";
    font-size: 14px;
    background-color: transparent;

    &:focus {
        outline: none;
    }
",
                  ],
                },
                "displayName": "styled.input",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bZQynM",
                "target": "input",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={
              Object {
                "current": <input
                  autocomplete="none"
                  class="sc-bZQynM dqTFug"
                  type="text"
                  value="Hello"
                />,
              }
            }
            onChange={[Function]}
            onFocus={[Function]}
            theme={
              Object {
                "error": String {
                  "0": "#",
                  "1": "d",
                  "2": "3",
                  "3": "2",
                  "4": "f",
                  "5": "2",
                  "6": "f",
                  "dark": "#9e0707",
                  "light": "#e54242",
                },
                "grey": String {
                  "0": "#",
                  "1": "7",
                  "2": "3",
                  "3": "7",
                  "4": "3",
                  "5": "7",
                  "6": "3",
                  "dark": "#202020",
                  "light": "#838383",
                },
                "primary": String {
                  "0": "#",
                  "1": "5",
                  "2": "7",
                  "3": "0",
                  "4": "7",
                  "5": "e",
                  "6": "b",
                  "dark": "#4a0072",
                  "light": "#6217ed",
                },
                "success": String {
                  "0": "#",
                  "1": "3",
                  "2": "0",
                  "3": "a",
                  "4": "6",
                  "5": "4",
                  "6": "a",
                  "dark": " #178b30",
                  "light": "#42b45b",
                },
                "warning": String {
                  "0": "#",
                  "1": "f",
                  "2": "f",
                  "3": "9",
                  "4": "9",
                  "5": "2",
                  "6": "6",
                  "dark": "#ff8800",
                  "light": "#ffa726",
                },
              }
            }
            type="text"
            value="Hello"
          >
            <input
              autoComplete="none"
              className="sc-bZQynM dqTFug"
              disabled={false}
              onChange={[Function]}
              onFocus={[Function]}
              type="text"
              value="Hello"
            />
          </StyledComponent>
        </styled.input>
        <styled.span>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-ifAKCX",
                  "isStatic": false,
                  "lastClassName": "iwTHmR",
                  "rules": Array [
                    "
    position: absolute;
    visibility: hidden;
    bottom: -20px;
    left: 8px;
    font-size: 14px;
",
                  ],
                },
                "displayName": "styled.span",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-ifAKCX",
                "target": "span",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <span
              className="sc-ifAKCX iwTHmR"
            />
          </StyledComponent>
        </styled.span>
        <styled.span>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-EHOje",
                  "isStatic": false,
                  "lastClassName": "iMxrDv",
                  "rules": Array [
                    "
    position: absolute;
    visibility: hidden;
    bottom: -20px;
    width: 100%;
    font-size: 14px;
    color: rgb(117, 117, 117);
",
                  ],
                },
                "displayName": "styled.span",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-EHOje",
                "target": "span",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <span
              className="sc-EHOje iMxrDv"
            />
          </StyledComponent>
        </styled.span>
      </div>
    </StyledComponent>
  </styled.div>
</Input>
`;
